<!--
  App Environments:
  --------------------------------------------------------
  Ruby:  2.1.2-p95
  Rails: 4.1.1
  Thanks to RubyChina
-->
<!DOCTYPE html>
<html>
<head>
  <title>TesterHome | 单元测试实践的主要问题与解决 &raquo; 社区</title>
  <meta charset='utf-8' />
  <meta name="keywords" content="" />
  <meta name="description" content="" />
  <link data-turbolinks-track="true" href="../assets/front-7f214c07ef8cbdd59ba99f0ea4b052b9.css" media="screen" rel="stylesheet" />
    <link href="../assets/mobile-4fb33e42cee242735db607f08badd48a.css" media="screen and (max-width: 798px)" rel="stylesheet" />
  <link rel="shortcut icon" href="../assets/big_logo-e45f9cf8961e479b209d942f449d3b7b.png" />
  <link href="feed" rel="alternate" title="订阅最新帖" type="application/rss+xml" />
  <script data-turbolinks-track="true" src="../assets/app-d8b8d53b12135c77eba5ce7899b456b3.js"></script>
  <meta content="authenticity_token" name="csrf-param" />
<meta content="n6IluQs+rvFYzOtLM2JildRgsvcNIwvZOjb84Ctm9Jg=" name="csrf-token" />
  
  
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?bfca03d31121ff43bab8f1bf58dcb58b";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>

</head>
<body data-offset="50" data-controller-name="topics">
  <div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
      <div class="container">
        <h3>
          <a href="../index.html" class="site-logo"></a>
        </h3>
        <ul class="nav"><li class="first"><a href="../index.html">首页</a></li><li class="active"><a href="../notes/2">社区</a></li><li><a href="../wiki">Wiki</a></li><li><a href="../jobs">招聘</a></li><li class="last"><a href="../sites">酷站</a></li></ul>
        <span class="pull-right">
          <form action="http://testerhome.com/search" class="navbar-search" method="get">
            <input type="text" name="q" class="search-query" value="" placeholder="搜索" />
          </form>

            <ul class="nav pull-right" id="userbar"><li class="first"><a href="../account/sign_up">注册</a></li><li class="last"><a href="../account/password/edit">登录</a></li></ul>

        </span>
      </div>
    </div>
  </div>

  <div class="container">
    
    
    <div id="main" class="container-fluid">
      
<div class="content">
  <div id="topic_show" class="topics box hfeed">
    <div class="topic hentry">
      <div class="infos">
  <div class="pull-right avatar_large">
    <img alt="Normal" class="uface" src="../assets/avatar/normal-85ccf778012f4e1c31eae0d152183034.png" />
  </div>
  <h1 class="entry-title">单元测试实践的主要问题与解决</h1>
  <div class="info leader">
    <a class="node" href="node1">资讯点评</a>
     · 
    匿名
     · 
    于<abbr class="timeago" title="2012-10-18T22:51:53+08:00"></abbr>发布
       · 
      最后由 <a data-name="simple" href="../simple">simple</a> 于<abbr class="timeago" title="2012-10-22T11:25:06+08:00"></abbr>回复
     · 
    154次阅读
  </div>
</div>

      
      <div class="body entry-content">
        <p>Link  <a href="http://blog.jobbole.com/29300/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=%25e5%258d%2595%25e5%2585%2583%25e6%25b5%258b%25e8%25af%2595%25e5%25ae%259e%25e8%25b7%25b5%25e7%259a%2584%25e4%25b8%25bb%25e8%25a6%2581%25e9%2597%25ae%25e9%25a2%2598%25e4%25b8%258e%25e8%25a7%25a3%25e5%2586%25b3" rel="nofollow" target="_blank">http://blog.jobbole.com/29300/?utm_source=rss&utm_medium=rss&utm_campaign=%25e5%258d%2595%25e5%2585%2583%25e6%25b5%258b%25e8%25af%2595%25e5%25ae%259e%25e8%25b7%25b5%25e7%259a%2584%25e4%25b8%25bb%25e8%25a6%2581%25e9%2597%25ae%25e9%25a2%2598%25e4%25b8%258e%25e8%25a7%25a3%25e5%2586%25b3</a></p>

<p>来源：dellfox 的博客<br />
摘要：本文是我在“第十届中国系统与软件过程改进年会广东会场”所作演讲的整理稿，主要分享单元测试的一些要点、单元测试实践的主要问题，以及如何来解决这些问题。<br />
一、 单元测试概述<br />
1. 1 什么是单元测试<br />
单元测试，就是针对代码单元的独立测试。为什么需要单元测试呢？这是代码的基本特性决定了的。代码有一个基本特性，就是对数据分类处理。<br />
代码通常会有很多的判定。一个判定，就是一次分类。嵌套的判定，会使分类次数的翻倍。</p>

<p>如果我们在写代码的时候，有一个分类漏掉了，就会产生一个Bug；如果一个分类，虽然写了代码，但是处理不正确，也会产生一个Bug。一个函数要没有错误，必须做到两点：1，对数据的分类必须完整；2，每一个分类的处理必须正确。做到了这两点，就可以说，代码的功能逻辑是正确的。</p>

<p>那么，如何检测代码的功能逻辑是否正确呢？<br />
调试，是临时的，且不完整的，例如，一个函数有十种输入，调试能覆盖五六种就不错了。而系统测试，并不针对某个具体的函数，不关注某个函数的功能逻辑是否正确。<br />
要检测某个函数的功能逻辑，就必须要依照分类列出数据，检测代码是否对每一个分类都做了处理，而且每一个分类的处理是否正确。<br />
——这就是单元测试。<br />
1. 2 单元测试的基本方法<br />
由上面的分析可以看出，单元测试的基本方法就是：依数据的分类列出输入，执行被测试程序，然后，判断输出是否符合预期。</p>

<p>单元测试能达到什么样的效果呢？那就是：无论别人怎么样，我总是对的！<br />
这里的“别人”，是指关联代码。“我”，是指当前正在编写或测试的代码。单元测试要做到的是，无论关联代码是否有错，都要保证我是对的。具体来说，我要考虑关联代码会产生什么样的数据，这些数据要如何分类处理，只要我的分类和处理是正确的，那么，无论别人怎么样，我总是对的。</p>

<ol>
<li>3 单元测试的效益
单元测试的效益可以说是立竿见影，并且会推动整个开发过程的改进。
首先，单元测试可以保证代码的质量。因为只有单元测试，能够全面检测代码单元的功能逻辑，排除代码中大量的、细小的错误。</li>
</ol>

<p>其次，排错成本最小。如果在编码阶段同时进行单元测试，排错成本可以忽略不计。但若到了后期，排错成本可能会增长上百倍，要是产品已经到了用户手里，那造成的损失就更难说了。</p>

<p>第三，提升开发效率。单元测试可以让程序行为一目了然，也就是程序行为可视化。什么叫程序行为呢？就是什么输入下，会执行哪些代码，会产生什么输出。如下图，黑色的代码是当前输入下所执行代码。</p>

<p>如果我们写几行代码，就可以看到程序的行为，相当于写文章时上下文可见，这可以促进我们的开发思维。如果我们的思维有了偏差，也可以及时发现。如果代码中有了错误，也可以随时排除。<br />
那么，是不是整个项目的所有代码都做了单元测试，才能得到这些效益呢？不是的。80:20规则，在软件开发过程中也存在。也就是说，80%的代码错误，可能存在于20%的代码中；80%的编码、调试成本，可能会消耗在20%的代码上。这20%，就是算法密集度高的代码，也就是功能逻辑复杂的代码。</p>

<p>这些代码可能只有20%，但是却可能包含了80%的错误，消耗了80%的编码、调试时间，即使只对这部分代码进行单元测试，在提升产品的质量和开发效率方面，也会产生立竿见影的效果。<br />
第四，自动回归。如果没有单元测试，系统测试发现了错误，当然要修改代码，而修改代码可能引入新的错误，又要进行全面的系统测试，这样就可能陷入循环，这通常也是项目延期的主要原因。<br />
如果有了单元测试，修改代码时可以通过回归测试马上检测是否引入了新的错误。所谓回归，就是回复到原来正确的状态。</p>

<p>正是回归测试，使单元测试对整个开发过程的改进都产生积极影响，使项目适应频繁变化的需求。单元测试是敏捷开发的基础和核心，反过来说，有了单元测试，开发过程会自动趋于敏捷。单元测试也降低了后期测试的压力。</p>

<p>二、 单元测试实践的主要问题<br />
单元测试有个特点：测试简单独立的代码很容易，但要在实际工作中做好单元测试却很困难。<br />
根据我们的经验，企业在实施单元测试时，通常会面对四大问题——<br />
不愿做：程序员没有单元测试习惯。<br />
没时间：编写测试代码需要耗费大量的时间，项目的周期可能不允许。<br />
做不了：代码具有较高的耦合性，使单元测试难以进行。<br />
做不好：测试效果不能令人满意。我们通常会以覆盖率来衡量测试效果，但要实现高标准的测试覆盖很困难。<br />
三、 解决思路和方法<br />
如何解决上述问题呢？接下来，谈谈一些思路和方法，使用的工具是Visual Unit。Visual Unit，简称VU，是可视化的C&#47;C++单元测试工具。<br />
3. 1 如何解决“不愿做”和“没时间”<br />
对于“不愿做”，我们采用的对策是可视化，这个可视化，是指程序行为可视，后面我会用案例来演示；对于“没时间”，采用的对策是自动化，通过自动生成测试代码、自动打桩等功能，让测试的时间成本最小化。这两者结合起来，就是ETDD开发模式。<br />
那么，ETDD是什么呢？<br />
首先来介绍一下TDD，TDD就是测试驱动开发，这个大家可能听得比较多了。ETDD就是Easy TDD，即：易行版的TDD。ETDD具有以下一些特点：<br />
可视化，在开发过程中，程序行为可视。<br />
自动化，除了测试数据需要人工设定外，其他基本上都自动完成。<br />
现实化，不一定要测试所有代码，在开始阶段，可以只测试功能逻辑复杂的20%代码。<br />
下面，我用一个案例，讲解一下ETDD的过程：<br />
假如我要编写一个函数，它的功能是删除字符串左边的空格。<br />
先写好函数的框架，能通过编译就行。在编写代码前，程序员必须要做的一件事情，是想清楚代码的功能。如果我们想的时候，顺手把它记录下来，就可以让代码的功能更清晰、更明确。</p>

<p>我们现在来记录代码的功能。这里的记录，不是文字形式的宠统说明，而是数据形式的精确定义，也就是用输入和输出的方式来记录。<br />
首先，记录最基本的功能，也就是最基本、最常见的输入和输出。输入一个左边有空格的字符串，输出是删除左边空格后的字符串，返回值跟参数的输出是一样的。</p>

<p>然后，记录详细的功能。例如，左边没有空格的，全是空格的，还有空字符串。</p>

<p>把每种输入的正确输出也记录一下。完成了这个工作后，代码的功能就完全定义下来了。</p>

<p>现在，我们开始编写代码。我的编码思路是这样的：分为两步，第一步计算左边的空格数量；第二步，将非空格的字符向左移动，覆盖掉左边的空格。</p>

<p>以下几行代码，计算左边的空格，现在编译一下。CTRL+F7。如果编译通过，测试就会自动运行。</p>

<p>我们可以看到，输入是什么，执行了哪些代码，产生了什么输出。这里，黑色的是当前输入下所执行的代码，未执行的话会显示为红色。这里全是黑色，表示当前输入下执行了全部代码。如果我们想看一下计算左边空格的结果对不对，这是内部的数据，要指定位置后才会打印出来。按ESC键回到开发环境。</p>

<p>用这种语法可以输出内部数据，适合于程序员开发过程中使用。复杂类型也可以用同样的语法输出。</p>

<p>另一种输出内部数据的语法是，在左边的代码窗口，在要输出的位置点击一下，右键菜单选择“输出内部数据”，这样填一下就行了。这种方式不会修改产品代码，适合于测试员使用。</p>

<p>再次执行后，可以看到，左边的空格的数量是4，这是对的，那我们可以继续编写。</p>

<p>相关文章陈皓：单元测试要做多细？老派程序员——徒手实现伟大成就迈出单元测试的第一步编写综合的单元测试高效的JavaScript单元测试 </p>

<p>Link  <a href="http://blog.jobbole.com/29300/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=%25e5%258d%2595%25e5%2585%2583%25e6%25b5%258b%25e8%25af%2595%25e5%25ae%259e%25e8%25b7%25b5%25e7%259a%2584%25e4%25b8%25bb%25e8%25a6%2581%25e9%2597%25ae%25e9%25a2%2598%25e4%25b8%258e%25e8%25a7%25a3%25e5%2586%25b3" rel="nofollow" target="_blank">http://blog.jobbole.com/29300/?utm_source=rss&utm_medium=rss&utm_campaign=%25e5%258d%2595%25e5%2585%2583%25e6%25b5%258b%25e8%25af%2595%25e5%25ae%259e%25e8%25b7%25b5%25e7%259a%2584%25e4%25b8%25bb%25e8%25a6%2581%25e9%2597%25ae%25e9%25a2%2598%25e4%25b8%258e%25e8%25a7%25a3%25e5%2586%25b3</a></p>
      </div>


      

      <div class="tools pull-right">
  
  <a class="likeable" href="../account/password/edit"><i class="icon small_like"></i> <span>喜欢</span></a>
  
  <a href="http://cli.im/api/qrcode"><i class="icon icon-qrcode"></i>二维码</a>
</div>
<div class='social-share-button' data-title='单元测试实践的主要问题与解决 via: @testerhome ' data-img='' data-url=''>
<a class="social-share-button-twitter" data-site="twitter" href="54#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Twitter"></a>
<a class="social-share-button-facebook" data-site="facebook" href="54#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Facebook"></a>
<a class="social-share-button-google_plus" data-site="google_plus" href="54#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Google+"></a>
<a class="social-share-button-weibo" data-site="weibo" href="54#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到新浪微博"></a>
<a class="social-share-button-douban" data-site="douban" href="54#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到豆瓣"></a>
</div>

    </div>
  </div>

    <div id="replies" class="box box_gray">
      <div class="total">
        共收到 <b>1</b> 条回复
      </div>
      <div class="items">
        
          <div class="reply" id="reply1">
    <div class="pull-left face"><a href="../simple"><img alt="50" class="uface" src="../user/large_avatar/50.jpg" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="" href="../simple">simple</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="54#reply1">1楼</a> · <abbr class="timeago" title="2012-10-22T11:25:06+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="68" data-state="" data-type="Reply" href="54#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="50" href="http://testerhome.com/topics/54/replies/68/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="1" data-login="simple" href="54#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p>开发没时间写UT，怎么办？就算上头下命令也不行，因为开发确实已经一直在加班了，且抛开加班是否合理不谈，确实没时间让他们去写UT</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>

      </div>
      
    </div>

      <div id="reply" class="form box">
    <div style="padding:20px;">
    需要 <a class="btn btn-primary" href="../account/password/edit">登录</a> 后回复方可回复, 如果你还没有账号你可以 <a class="btn btn-danger" href="../account/sign_up">注册</a> 一个帐号。
    </div>
</div>
</div>

  <div class="sidebar">
    
    <div class="box">
  <h2 class="title">小帖士</h2>
  <div class="content">
    @yunmu:我希望今年能推荐更多的人到我们阿里团队
  </div>
</div>
    <div class="box clearfix">
  <h2 class="title">节点下其他话题</h2>
  <ul>
    <li><a href="1378" title="《刀塔传奇》之互联网从业人员评测">《刀塔传奇》之互联网从业人员评测</a></li>
  </ul>
</div>

  </div>

    </div>
  </div>

  <a class="go_top" href="54#"><i class="icon icons_go_top"></i></a>
  <footer class="footer">
    <div class="container">
      <div class="container">
      <div class="pull-right" style="width:200px; text-align:right;">
<a href="http://www.ucloud.cn/?ref=testerhome.com" target="_blank" rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="本站服务器由 Ucloud 赞助"><img src="../photo/2014/ace04e205ff40be04f47de439d253b59.png" style="height:28px"></a>
</div>

<div>
<div class="pull-left" style="margin-right:10px;">
<img src="../photo/2015/7b5b57bb91762429809a9f95255392ad.png" style="width:48px;">
</div>
<p class="links">

<a href="143">关于</a> | 
<a href="http://weibo.com/u/3871514412">微博</a> | 
<a href="../users.1">活跃用户</a> | 
<a href="node13">反馈</a> | 
<a href="https://github.com/testerhome">Github</a> |
<a href="../wiki/spreadtesterhome">帮助推广</a> |  
<a href="http://www.miibeian.gov.cn/">京ICP备13049862号</a>


</p>
<p class="copyright">
TesterHome 移动测试社区，由众多移动测试工作者维护，致力于推进国内测试技术。
</p>
<p class="copyright">
友情链接

<a href="http://ruby-china.org/"  rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="感谢RubyChina提供建站代码">Ruby-China</a> | 
<a href="http://www.diggerplus.org/">DiggerPlus</a> | 
<a href="http://www.testwo.com/">测试窝</a> | 
<a href="http://www.kootest.com/">酷测</a> | 
<a href="http://itest.info/">重定向科技</a> |
<a href="http://www.robotium.cn/">Robotium 中国</a> |
<a href="http://cafe.testin.cn/">Testin开发者社区</a>
<script src="http://s4.cnzz.com/z_stat.php?id=1000474281&web_id=1000474281" language="JavaScript"></script>

</p>

</div>
    </div>






    </div>
  </footer>
  <script type="text/javascript" data-turbolinks-eval=false>
    App.root_url = "http://testerhome.com/";
    App.asset_url = "http://testerhome.com";
    App.faye_client_url = "http://testerhome.com:8080/faye";
    if (App.faye_client_url) {
      App.initNotificationSubscribe();
    }
  </script>
    <script type="text/javascript">
    Topics.replies_per_page = 50;
    $(document).ready(function(){
    })
  </script>

  <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-45014075-1']);
      _gaq.push(['_setSiteSpeedSampleRate', 100]);
      _gaq.push(['_trackPageview']);
      u=document.getElementById("user_menu");
      ur="";
      if(u) ur=document.getElementById("user_menu").innerText.split(" ")[0]
      _gaq.push(['_setCustomVar', 1,'user',ur,1]);

      (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  </script>

  <div class="zoom-overlay"></div>
</body>
</html>
