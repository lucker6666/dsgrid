<!--
  App Environments:
  --------------------------------------------------------
  Ruby:  2.1.2-p95
  Rails: 4.1.1
  Thanks to RubyChina
-->
<!DOCTYPE html>
<html>
<head>
  <title>TesterHome | uiautomatorviewer 新增功能 compressed 之 Device 端细节 &raquo; 社区</title>
  <meta charset='utf-8' />
  <meta name="keywords" content="" />
  <meta name="description" content="" />
  <link data-turbolinks-track="true" href="../assets/front-7f214c07ef8cbdd59ba99f0ea4b052b9.css" media="screen" rel="stylesheet" />
    <link href="../assets/mobile-4fb33e42cee242735db607f08badd48a.css" media="screen and (max-width: 798px)" rel="stylesheet" />
  <link rel="shortcut icon" href="../assets/big_logo-e45f9cf8961e479b209d942f449d3b7b.png" />
  <link href="feed" rel="alternate" title="订阅最新帖" type="application/rss+xml" />
  <script data-turbolinks-track="true" src="../assets/app-d8b8d53b12135c77eba5ce7899b456b3.js"></script>
  <meta content="authenticity_token" name="csrf-param" />
<meta content="n6IluQs+rvFYzOtLM2JildRgsvcNIwvZOjb84Ctm9Jg=" name="csrf-token" />
  
  
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?bfca03d31121ff43bab8f1bf58dcb58b";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>

</head>
<body data-offset="50" data-controller-name="topics">
  <div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
      <div class="container">
        <h3>
          <a href="../index.html" class="site-logo"></a>
        </h3>
        <ul class="nav"><li class="first"><a href="../index.html">首页</a></li><li class="active"><a href="../notes/2">社区</a></li><li><a href="../wiki">Wiki</a></li><li><a href="../jobs">招聘</a></li><li class="last"><a href="../sites">酷站</a></li></ul>
        <span class="pull-right">
          <form action="http://testerhome.com/search" class="navbar-search" method="get">
            <input type="text" name="q" class="search-query" value="" placeholder="搜索" />
          </form>

            <ul class="nav pull-right" id="userbar"><li class="first"><a href="../account/sign_up">注册</a></li><li class="last"><a href="../account/password/edit">登录</a></li></ul>

        </span>
      </div>
    </div>
  </div>

  <div class="container">
    
    
    <div id="main" class="container-fluid">
      
<div class="content">
  <div id="topic_show" class="topics box hfeed">
    <div class="topic hentry">
      <div class="infos">
  <div class="pull-right avatar_large">
    <a href="../doctorq"><img alt="1011" class="uface" src="../user/large_avatar/1011.jpg" style="width:48px;height:48px;" /></a>
  </div>
  <h1 class="entry-title">uiautomatorviewer 新增功能 compressed 之 Device 端细节</h1>
  <div class="info leader">
    <a class="node" href="node2">自动化测试工具</a>
     · 
    <a data-author="true" data-name="doctorq" href="../doctorq">doctorq</a>
     · 
    于<abbr class="timeago" title="2015-01-16T16:48:23+08:00"></abbr>发布
     · 
    134次阅读
  </div>
</div>

      
      <div class="body entry-content">
        <p>昨天了解了uiautoamtorviewer新增功能dump --compressed，是一个直接发送到设备端的命令，那么这个命令发送到设备端后，设备端是如何操作的呢？我又成了10万个为什么了？继续源码研究......</p>
<h4>源码地址</h4>
<p><a href="https://android.googlesource.com/platform/frameworks/uiautomator/+/android-sdk-4.4.2_r1.0.1" target="_blank">google source</a></p>

<p>这个jar包最新的版本只到了4.4.2。说明5.0后的uiautomator设备端是没有改变的，那么说明dump --compressed之前就有，只是我不知道罢鸟。结论：</p>

<p><strong><em>dump --compressed命令4.4.2时代就有，只是年少无知没发现</em></strong></p>
<h4>源码环境搭建</h4>
<p>解压以后项目结果如下所示：</p>

<p><img src="../photo/2015/dd78f7a02a0762ae4e35ad4e2a0cd305.png" alt=""></p>

<p>直接用eclipse的import功能导入，整体导入。导入eclipse后,如下图所示，感叹号是因为没有添加<code>android.jar</code>造成的，加上就好了。</p>

<p><img src="../photo/2015/3201f97ca892be343611373840bbc1fa.png" alt=""></p>
<h4>源码分析</h4>
<p>当我们在命令行下输入下面命令的时候，android系统就会调用<code>cmds</code>目录下的<code>Launcher</code>类中的<code>main</code>方法中</p>
<pre class="highlight java"><span class="o">/</span><span class="n">system</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">uiautomator</span> <span class="n">dump</span> <span class="o">--</span><span class="n">compressed</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">uidump</span><span class="o">.</span><span class="na">xml</span>
</pre>
<h4>Launcher</h4>
<p>所以我们从main开始我们的大餐:</p>
<pre class="highlight java"><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// show a meaningful process name in `ps`</span>
        <span class="n">Process</span><span class="o">.</span><span class="na">setArgV0</span><span class="o">(</span><span class="s">"uiautomator"</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">Command</span> <span class="n">command</span> <span class="o">=</span> <span class="n">findCommand</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">command</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">String</span><span class="o">[]</span> <span class="n">args2</span> <span class="o">=</span> <span class="o">{};</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c1">// consume the first arg</span>
                    <span class="n">args2</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">copyOfRange</span><span class="o">(</span><span class="n">args</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">args</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="n">command</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">args2</span><span class="o">);</span>
                <span class="k">return</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">HELP_COMMAND</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
</pre>

<p>下面一步一步解释上面的代码的意思：<br>
<code>1</code>.首先在进程信息中添加上<code>uiautomator</code>信息，这样你在命令行中敲<code>adb shell ps</code>就能查看到<code>uiautomator</code>进程的信息了。<br>
<code>2</code>.判断参数数量是否大于0，其中要了解的是上面的命令中dump算第一个参数。不要把system/bin/uiautmator当成了第一个参数。<br>
<code>3</code>.当参数数量大于0时，获得第一个参数的值args[0]，其中findCommand()方法根据命令的名称得到命令的类型。总共有四个命令:<code>help</code>、<code>events</code>、<code>runtest</code>、<code>dump</code>，你如果想知道各个命令是干什么的，你可以在命令行下敲一下看看输出就知道了。</p>
<pre class="highlight java"><span class="kd">private</span> <span class="kd">static</span> <span class="n">Command</span><span class="o">[]</span> <span class="n">COMMANDS</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Command</span><span class="o">[]</span> <span class="o">{</span>
        <span class="n">HELP_COMMAND</span><span class="o">,</span>
        <span class="k">new</span> <span class="n">RunTestCommand</span><span class="o">(),</span>
        <span class="k">new</span> <span class="n">DumpCommand</span><span class="o">(),</span>
        <span class="k">new</span> <span class="n">EventsCommand</span><span class="o">(),</span>
    <span class="o">};</span>
</pre>

<p><code>4</code>.如果命令不为空，就要执行相应的命令，但是还要将剩下的参数(可能为空的参数，但不是null值)传入<code>run</code>方法中，让各个类型自己处理。我们的命令是dump命令，所以下一步进入<code>DumpCommand</code>中。<br>
<code>5</code>.如果不带参数的话，直接执行<code>help</code>命令。</p>
<h4>DumpCommand</h4><pre class="highlight java"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="p">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">File</span> <span class="n">dumpFile</span> <span class="o">=</span> <span class="n">DEFAULT_DUMP_FILE</span><span class="o">;</span>
        <span class="kt">boolean</span> <span class="n">verboseMode</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">arg</span> <span class="o">:</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">arg</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"--compressed"</span><span class="o">))</span>
                <span class="n">verboseMode</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">else</span> <span class="k">if</span> <span class="o">(!</span><span class="n">arg</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">dumpFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">arg</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">UiAutomationShellWrapper</span> <span class="n">automationWrapper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UiAutomationShellWrapper</span><span class="o">();</span>
        <span class="n">automationWrapper</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">verboseMode</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// default</span>
            <span class="n">automationWrapper</span><span class="o">.</span><span class="na">setCompressedLayoutHierarchy</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">automationWrapper</span><span class="o">.</span><span class="na">setCompressedLayoutHierarchy</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="c1">// It appears that the bridge needs time to be ready. Making calls to the</span>
        <span class="c1">// bridge immediately after connecting seems to cause exceptions. So let's also</span>
        <span class="c1">// do a wait for idle in case the app is busy.</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">UiAutomation</span> <span class="n">uiAutomation</span> <span class="o">=</span> <span class="n">automationWrapper</span><span class="o">.</span><span class="na">getUiAutomation</span><span class="o">();</span>
            <span class="n">uiAutomation</span><span class="o">.</span><span class="na">waitForIdle</span><span class="o">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">AccessibilityNodeInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">uiAutomation</span><span class="o">.</span><span class="na">getRootInActiveWindow</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">info</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ERROR: null root node returned by UiTestAutomationBridge."</span><span class="o">);</span>
                <span class="k">return</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="n">Display</span> <span class="n">display</span> <span class="o">=</span>
                    <span class="n">DisplayManagerGlobal</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRealDisplay</span><span class="o">(</span><span class="n">Display</span><span class="o">.</span><span class="na">DEFAULT_DISPLAY</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">rotation</span> <span class="o">=</span> <span class="n">display</span><span class="o">.</span><span class="na">getRotation</span><span class="o">();</span>
            <span class="n">Point</span> <span class="n">size</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Point</span><span class="o">();</span>
            <span class="n">display</span><span class="o">.</span><span class="na">getSize</span><span class="o">(</span><span class="n">size</span><span class="o">);</span>
            <span class="n">AccessibilityNodeInfoDumper</span><span class="o">.</span><span class="na">dumpWindowToFile</span><span class="o">(</span><span class="n">info</span><span class="o">,</span> <span class="n">dumpFile</span><span class="o">,</span> <span class="n">rotation</span><span class="o">,</span> <span class="n">size</span><span class="o">.</span><span class="na">x</span><span class="o">,</span> <span class="n">size</span><span class="o">.</span><span class="na">y</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TimeoutException</span> <span class="n">re</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"ERROR: could not get idle state."</span><span class="o">);</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="n">automationWrapper</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span>
                <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"UI hierchary dumped to: %s"</span><span class="o">,</span> <span class="n">dumpFile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()));</span>
    <span class="o">}</span>
</pre>

<p>run方法执行的步骤有点长，没关系，慢慢来。<br>
<code>1</code>.首先创建文件用来保存dump下来的信息，这个时候需要注意<code>getLegacyExternalStorageDirectory</code>是个隐藏的方法，官网上的api没有这个方法的解释，可以在源码上找到，我贴在这里，帮助理解,该文件的路径为<code>/storage/emulated/legacy/window_dump.xml</code></p>
<pre class="highlight java"><span class="cm">/** {@hide} */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">File</span> <span class="n">getLegacyExternalStorageDirectory</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="n">ENV_EXTERNAL_STORAGE</span><span class="o">));</span>
    <span class="o">}</span>
</pre>

<p><code>2</code>.然后解析传入的参数得到保存的路径以及是否压缩。<br>
<code>3</code>.然后创建<code>UiAutomationShellWrapper对象</code>，启动Handler线程，创建Uiautomation对象，并建立连接。然后设置了压缩属性。这个<code>UiAutomationShellWrapper</code>也是隐藏的，也只能到源码环境下查看。<br>
<code>4</code>.然后我们得到了Uiautomation的对象实例</p>
<pre class="highlight java"><span class="n">UiAutomation</span> <span class="n">uiAutomation</span> <span class="o">=</span> <span class="n">automationWrapper</span><span class="o">.</span><span class="na">getUiAutomation</span><span class="o">();</span>
            <span class="n">uiAutomation</span><span class="o">.</span><span class="na">waitForIdle</span><span class="o">(</span><span class="mi">1000</span><span class="o">,</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">AccessibilityNodeInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">uiAutomation</span><span class="o">.</span><span class="na">getRootInActiveWindow</span><span class="o">();</span>
</pre>

<p>等待UI界面处于稳定后(idle状态)，然后我们调用<code>getRootInActiveWindow</code>方法获得结果的根节点。这个时候我们整个流程差不多结束了，我们care的--compressed还没看到。</p>
<h4>compressed</h4>
<p>经过一路追踪,发现compressed属性在整个过程中的作用是给<code>AccessibilityServiceInfo</code>对象添加了一个 <a href="http://developer.android.com/reference/android/accessibilityservice/AccessibilityServiceInfo.html#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS" target="_blank">FLAG_INCLUDE_NOT_IMPORTANT_VIEWS </a>标志位。其他的就是正常获取dump信息流程,这个标志位对获取信息时候的影响有多大，留到以后来解释(没有源码环境，不好调试啊，头疼......)。</p>
      </div>

      <div class="excellent">
        <i class="icon small_cert_on"></i> 本帖已被设为精华帖！
      </div>

      

      <div class="tools pull-right">
  
  <a class="likeable" href="../account/password/edit"><i class="icon small_like"></i> <span>喜欢</span></a>
  
  <a href="http://cli.im/api/qrcode"><i class="icon icon-qrcode"></i>二维码</a>
</div>
<div class='social-share-button' data-title='uiautomatorviewer 新增功能 compressed 之 Device 端细节 via: @testerhome ' data-img='' data-url=''>
<a class="social-share-button-twitter" data-site="twitter" href="1887#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Twitter"></a>
<a class="social-share-button-facebook" data-site="facebook" href="1887#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Facebook"></a>
<a class="social-share-button-google_plus" data-site="google_plus" href="1887#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Google+"></a>
<a class="social-share-button-weibo" data-site="weibo" href="1887#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到新浪微博"></a>
<a class="social-share-button-douban" data-site="douban" href="1887#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到豆瓣"></a>
</div>

    </div>
  </div>

    <div class="no_result">
      暂无回复。
    </div>

      <div id="reply" class="form box">
    <div style="padding:20px;">
    需要 <a class="btn btn-primary" href="../account/password/edit">登录</a> 后回复方可回复, 如果你还没有账号你可以 <a class="btn btn-danger" href="../account/sign_up">注册</a> 一个帐号。
    </div>
</div>
</div>

  <div class="sidebar">
    
    <div class="box">
  <h2 class="title">小帖士</h2>
  <div class="content">
    请没有头像的同学，上传头像吧！
  </div>
</div>
    <div class="box clearfix">
  <h2 class="title">节点下其他话题</h2>
  <ul>
    <li><a href="1892" title="JUnit4---实践：运行指定类的某些测试方法(可用于单独运行失败的方法)">JUnit4---实践：运行指定类的某些测试方法(可用...</a></li>
  </ul>
</div>

  </div>

    </div>
  </div>

  <a class="go_top" href="1887#"><i class="icon icons_go_top"></i></a>
  <footer class="footer">
    <div class="container">
      <div class="container">
      <div class="pull-right" style="width:200px; text-align:right;">
<a href="http://www.ucloud.cn/?ref=testerhome.com" target="_blank" rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="本站服务器由 Ucloud 赞助"><img src="../photo/2014/ace04e205ff40be04f47de439d253b59.png" style="height:28px"></a>
</div>

<div>
<div class="pull-left" style="margin-right:10px;">
<img src="../photo/2015/7b5b57bb91762429809a9f95255392ad.png" style="width:48px;">
</div>
<p class="links">

<a href="143">关于</a> | 
<a href="http://weibo.com/u/3871514412">微博</a> | 
<a href="../users.1">活跃用户</a> | 
<a href="node13">反馈</a> | 
<a href="https://github.com/testerhome">Github</a> |
<a href="../wiki/spreadtesterhome">帮助推广</a> |  
<a href="http://www.miibeian.gov.cn/">京ICP备13049862号</a>


</p>
<p class="copyright">
TesterHome 移动测试社区，由众多移动测试工作者维护，致力于推进国内测试技术。
</p>
<p class="copyright">
友情链接

<a href="http://ruby-china.org/"  rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="感谢RubyChina提供建站代码">Ruby-China</a> | 
<a href="http://www.diggerplus.org/">DiggerPlus</a> | 
<a href="http://www.testwo.com/">测试窝</a> | 
<a href="http://www.kootest.com/">酷测</a> | 
<a href="http://itest.info/">重定向科技</a> |
<a href="http://www.robotium.cn/">Robotium 中国</a> |
<a href="http://cafe.testin.cn/">Testin开发者社区</a>
<script src="http://s4.cnzz.com/z_stat.php?id=1000474281&web_id=1000474281" language="JavaScript"></script>

</p>

</div>
    </div>






    </div>
  </footer>
  <script type="text/javascript" data-turbolinks-eval=false>
    App.root_url = "http://testerhome.com/";
    App.asset_url = "http://testerhome.com";
    App.faye_client_url = "http://testerhome.com:8080/faye";
    if (App.faye_client_url) {
      App.initNotificationSubscribe();
    }
  </script>
    <script type="text/javascript">
    Topics.replies_per_page = 50;
    $(document).ready(function(){
    })
  </script>

  <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-45014075-1']);
      _gaq.push(['_setSiteSpeedSampleRate', 100]);
      _gaq.push(['_trackPageview']);
      u=document.getElementById("user_menu");
      ur="";
      if(u) ur=document.getElementById("user_menu").innerText.split(" ")[0]
      _gaq.push(['_setCustomVar', 1,'user',ur,1]);

      (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  </script>

  <div class="zoom-overlay"></div>
</body>
</html>
