<!--
  App Environments:
  --------------------------------------------------------
  Ruby:  2.1.2-p95
  Rails: 4.1.1
  Thanks to RubyChina
-->
<!DOCTYPE html>
<html>
<head>
  <title>TesterHome | Appium 1.0 webinar 上的一些问答 &raquo; 社区</title>
  <meta charset='utf-8' />
  <meta name="keywords" content="" />
  <meta name="description" content="" />
  <link data-turbolinks-track="true" href="../assets/front-7f214c07ef8cbdd59ba99f0ea4b052b9.css" media="screen" rel="stylesheet" />
    <link href="../assets/mobile-4fb33e42cee242735db607f08badd48a.css" media="screen and (max-width: 798px)" rel="stylesheet" />
  <link rel="shortcut icon" href="../assets/big_logo-e45f9cf8961e479b209d942f449d3b7b.png" />
  <link href="feed" rel="alternate" title="订阅最新帖" type="application/rss+xml" />
  <script data-turbolinks-track="true" src="../assets/app-d8b8d53b12135c77eba5ce7899b456b3.js"></script>
  <meta content="authenticity_token" name="csrf-param" />
<meta content="n6IluQs+rvFYzOtLM2JildRgsvcNIwvZOjb84Ctm9Jg=" name="csrf-token" />
  
  
<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?bfca03d31121ff43bab8f1bf58dcb58b";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>

</head>
<body data-offset="50" data-controller-name="topics">
  <div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
      <div class="container">
        <h3>
          <a href="../index.html" class="site-logo"></a>
        </h3>
        <ul class="nav"><li class="first"><a href="../index.html">首页</a></li><li class="active"><a href="../notes/2">社区</a></li><li><a href="../wiki">Wiki</a></li><li><a href="../jobs">招聘</a></li><li class="last"><a href="../sites">酷站</a></li></ul>
        <span class="pull-right">
          <form action="http://testerhome.com/search" class="navbar-search" method="get">
            <input type="text" name="q" class="search-query" value="" placeholder="搜索" />
          </form>

            <ul class="nav pull-right" id="userbar"><li class="first"><a href="../account/sign_up">注册</a></li><li class="last"><a href="../account/password/edit">登录</a></li></ul>

        </span>
      </div>
    </div>
  </div>

  <div class="container">
    
    
    <div id="main" class="container-fluid">
      
<div class="content">
  <div id="topic_show" class="topics box hfeed">
    <div class="topic hentry">
      <div class="infos">
  <div class="pull-right avatar_large">
    <a href="../oscarxie"><img alt="4d43b8fa1e25dfac428fff0d828b3934" class="uface" src="../avatar/4d43b8fa1e25dfac428fff0d828b3934.png?s=96&amp;d=404" style="width:48px;height:48px;" /></a>
  </div>
  <h1 class="entry-title">Appium 1.0 webinar 上的一些问答</h1>
  <div class="info leader">
    <a class="node" href="node23">Appium</a>
     · 
    <a data-author="true" data-name="国文" href="../oscarxie">oscarxie</a>
     · 
    于<abbr class="timeago" title="2014-06-18T22:17:28+08:00"></abbr>发布
       · 
      最后由 <a data-name="seveniruby" href="../seveniruby">seveniruby</a> 于<abbr class="timeago" title="2014-06-19T13:47:49+08:00"></abbr>回复
     · 
    626次阅读
  </div>
</div>

      
      <div class="body entry-content">
        <p><strong>Why Appium? What distinguishes it from the competition?</strong></p>

<p>The main advantage of Appium is that it’s cross-platform, meaning it will work on iOS, Android, Firefox, OS, etc. You can test in any language; and you don’t have to modify your app. Plus, you can use the selenium protocol that you’re already familiar with from web testing. And on the nice-to-have spectrum, Appium has a great community around it; plus it’s free and open source.</p>

<p>Here’s a quick look at the competition currently:</p>

<p>Instruments – Disadvantage? One language. All done in advance. Can’t talk to outside frameworks.<br>
uiautomator – This works well; it also has instruments. But the language must be Java. tightly integration with app. Appium has more advanced features such as changing emulator language or xpath locators, however.<br>
iOS driver – main disadvantage, small community. not widely used.<br>
Selendroid – great project that appium supports. based on instruments, works on older android devices. more limited capabilities compared to uiautomator.<br>
KIF – modifying your app, writing objective c into your app. rule #1 is don’t mess with the code. takes it one degree of separation from what the customers are going to see. there are some advantages to doing that. more tight integration, able to do some types of testing that appium can’t<br>
Monkey Talk – low level. not the richness of appium</p>

<p><strong>Does Appium work with mobile web and native apps?</strong></p>

<p>Appium’s vision is to help automate everything mobile – including mobile web apps and native apps. It will continue to support Safari on iOS and Chrome on Android to use Appium to test mobile web and native apps. We are open to supporting other browsers.</p>

<p><strong>Does it work with Sauce Labs? How to get started with Appium? This is the first seminar I am attending about this</strong></p>

<p>Appium works on Sauce Labs. To get started checkout the documentation, tutorials, and sample code.</p>

<p><strong>How should you handle flaky network connection simulation?</strong></p>

<p>There definitely are tools. Proxies to change what your computer is doing.</p>

<p>Linux/OS X – ipfw – firewall rule tool<br>
Windows – fiddler – javascript for writing rules</p>

<p>Appium also talks over TCP so don’t apply rules to 4444 or 4723.</p>

<p><strong>Automating pre installed apps?</strong></p>

<p>Android works well. UiAutomator allows you to test all apps on the device, on emulators and real devices. You can even go back and forth between apps.</p>

<p>On iOS, you can test in built in apps such as settings only on the simulator. On real devices, apple limits you to testing only your app.</p>

<p><strong>Emulators vs real devices: which is better for testing?</strong></p>

<p>Watch the GTAC presentation here<br>
Check out how Google does their mobile testing here</p>

<p>Then ask yourself, what are you writing your automation for?</p>

<p>If it’s for business logic, simulators and emulators are probably fine.<br>
If it’s for performance and crashes, consider real devices.<br>
Overall, however, simulators and emulators are a highly effective way to save a lot of money.</p>

<p>**I’m joining a new company. How can I convince them to buy into Appium? **</p>

<p>You can use any language and test framework. It’s very easy to take existing selenium test infrastructure and use it for a proof of concept appium test cases. Fastest way to get started with mobile automation. Leverage existing languages and test frameworks that you use. Write a few small test cases then show it off as a demo. When people see appium running for the first time, it’s a pretty amazing experience.</p>

<p><strong>What are the desired capabilities of Appium (versus Selenium)?</strong></p>

<p>The capabilities were updated to match the mobile version of JSWP. Selenium wasn’t designed for mobile, so we worked with the Selenium project to define a new set of capabilities that support mobile.</p>

<p>platformName – ios/android<br>
platformVersion – 7.1/4.4<br>
deviceName – what kind of device we’re talking about iPhone Simulator/Nexus S<br>
Documented well in the migration guide for appium 1.0.</p>

<p><strong>If the same app is written for both platforms, how can I ensure a 100% cross-platform test?</strong></p>

<p>The idea of writing one test for both platforms is the holy grail; but it requires the app be extremely similar. Even with xamarin and the same language for both, it depends on how similar the app is on both platforms.</p>

<p>It’s not about having 100%. Instead,  have a small core that’s different, and then reuse the entire ecosystem about the test code. Everything can be the same except for a single definition file that encapsulates the differences.</p>

<p><strong>Does Appium have significant advantages over webdriver for testing web apps on mobile devices?</strong></p>

<p>Yes! Webdriver doesn’t provide drivers for mobile web apps or native apps. A tool like Appium is the only way you can automate mobile web apps currently.</p>

<p>Interestingly, the Selenium project recommends that you use a project like Appium in order to do this kind of automation. When you’re automating web apps using Appium, it’s just as though you’re using Selenium since there’s no difference in the code you write.  Appium is simply providing the backend instead of the Selenium jar.</p>

<p><strong>What is a short explanation as to what happens when an external application/activity is launched on Android/iOS?</strong></p>

<p>It’s different on each platform. On Android, it’ll be as if the user launched it.</p>

<p>iOS has sandboxed enviornment, if your app opens a 3rd party app then the automation session will be shut down on you. That’s something that only Apple will be able to fix.</p>

<p><strong>What is the release schedule for Appium?</strong></p>

<p>The release process is becoming more structured. The github milestone tracker is being used with estimated dates. They will change.</p>

<p>The project planning is based around this list of issues assigned to a milestone. Feedback is used to prioritize.</p>

<p><strong>How do new versions of Android/iOS impact Appium?</strong></p>

<p>We’re trying to get better at using the beta. For example, we were using iOS 7.1 beta months before it was officially released. We’re able to anticipate issues before release and quickly add official support.</p>

<p>If you try Appium on a new release of Android/iOS, make sure to report issues.</p>

<p><strong>What are Mavericks issues with Appium?</strong></p>

<p>The latest OS X and Xcode release works well with Appium. If there are issues, make sure to open issues on GitHub.</p>

<p><strong>How do I execute parallelization with Appium?</strong></p>

<p>Use Sauce Labs to run in parallel on iOS. Sauce handles the virtualization of OS X for you. You can either maintain a bunch of OS X machines or let Sauce handle it for you.</p>

<p>With Android, it’s easier to run multiple emulators on your own system. If you’re looking to scale, then Sauce Labs is a big win.</p>

<p><strong>Can you have multiple devices connected to one Appium server?</strong></p>

<p>You can run one Appium server per device, on different ports. On iOS, it’s only one device per system due to Apple limitations.</p>

<p><strong>Does Appium support Ruby, Python, C#, … etc?</strong></p>

<p>Yes.</p>

<p>Appium is an open source source tool, but is there a support team that we can contact directly contact in case of issues?</p>

<p>Appium support is similar to how Selenium is supported. There’s a discussion group for questions and an issue tracker on GitHub for reporting bugs. If you have a commercial contract with a company that supports appium, such as Sauce Labs, then they have their own support channels.</p>

<p><strong>Does Appium have the same approach as WebDriver/page objects?</strong></p>

<p>Yes exactly. If you know how to write webdriver code and use page objects, then they’re applied in the same way. All of the concepts transfer.</p>

<p><strong>Are there any hard button clicks supported in latest Appium versions for iOS devices ? I hope Android devices support this.</strong></p>

<p>Appium makes the full UI Automation JavaScript API available as provided by Apple. You can click on buttons within the app. For special buttons such as home, there are work arounds. If you have a specific button in mind, I recommend asking on the appium discussion list.</p>

<p>Android has full support for clicking all buttons. The underlying methods are listed in the UiDevice documentation. To click the back button, for example, the standard selenium command is used. For arbitrary keys, there’s keyevent which is being renamed to press_keycode .</p>

<p><strong>Are there plans to add OCR or image recognition support to appium?</strong></p>

<p>There’s an open issue for FindByImage. Appium supports taking screenshots so you’re free to perform any image recognition based on that data.</p>

<p><strong>Are there any tutorials available as to how to use an existing test automation system (in my case rspec/capybara) with appium?</strong></p>

<p>Appium has code samples on GitHub that include an rspec example. There’s also a tutorial which covers Ruby and Java on appium.io. Documentation is available.</p>

<p><strong>Are you considering hosting a conference about Appium in the near future? say 3 months down the road. Would be nice to have hands-on work shops etc.</strong></p>

<p>If you’re interested in an Appium conference, read this post on the discussion list.</p>

<p><strong>Are you planning to have scheduled releases, like every quarter or every six months, so we know when to expect Appium releases?</strong></p>

<p>Upcoming appium releases along with estimated dates are tracked as milestones on GitHub. For the latest bug fixes, running from source is an option.</p>

<p><strong>Can appium test cases run in parallel on different devices?</strong></p>

<p>Running tests in parallel works fine for Android. On iOS, Apple has limited automation to work on one device at a time. The best way to run at scale with Android Emulators &amp; iOS Simulators is to setup a selenium grid using virtual machines. Sauce Labs provides the easiest way to run tests in parallel on Android and iOS.</p>

<p><strong>Is automation possible without having the Xcode of  an app?</strong></p>

<p>On iOS, you’re expected to have Xcode installed along with a simulator build of the app. A non-simulator build will not work on the iOS simulator. If Xcode isn’t installed then the automation will not work on iOS.</p>

<p><strong>Can I use Appium to test web apps on mobile devices?</strong></p>

<p>Yes. Appium fully supports testing web apps on mobile devices using Chrome on Android and Safari on iOS.</p>

<p><strong>Can we use web application scripts used for Automation in Appium for native app as well?</strong></p>

<p>Reusing test code is going to be a challenge when comparing web automation to native app automation. If you follow the page object pattern, then it’s entirely possible to share some code between the web and native app. Common technology such as test language, results reporting, and parallelization strategy can all be the same.</p>

<p><strong>Can we do gestures on webview for Appium and not use webdriver since gestures are broken for iOS and Android?</strong></p>

<p>The APIs for advanced gestures are currently limited to native apps. Standard WebDriver commands should work inside webviews for gestures.</p>

<p><strong>Can you please provide a short explanation as to what happens when an external application/activity is launched during an Appium session (e.g., the contacts activity in android, or maps in iOS).</strong></p>

<p>The idea behind UI automation is to test the app as a user would. The simple answer to this question is that it’s the same as if a user installed the app and then launched it. For more details, checkout the debug log of the Appium server as it contains exactly what’s going on.</p>

<p><strong>Do I need to be an expert in Selenium WebDriver to effectively use Appium? In other words, is Selenium WebDriver experience a prerequisite for using Appium?</strong></p>

<p>You need to learn WebDriver to use Appium effectively because that’s how Appium works. If you’re already familiar with uiautomator and UI Automation, then it’s possible to use Appium without understanding the details of WebDriver.</p>

<p>If you look at the sample code, the amount of WebDriver knowledge required is not at the expert level.</p>

<p><strong>Do you have known issues when there are multiple devices connected on the same Appium server? We use 6 devices connect to the same Appium server.</strong></p>

<p>To test with more than one Android device locally, you need to have one Appium server per device. For iOS, Apple limits automation to one device at a time. Sauce Labs enables parallel iOS automation by using OS X in a virtual machine.</p>

<p><strong>Does Appium allow one to automate render.js webapps on mobile web for iOS and Android?</strong></p>

<p>Yes, Appium supports automating web apps on iOS and Android.</p>

<p><strong>Does Appium have significant advantages over WebDriver for testing straight up web apps on mobile devices?</strong></p>

<p>Appium is one of the only ways available today to use WebDriver to test mobile apps on mobile devices. WebDriver alone doesn’t support mobile.</p>

<p>for Android, Appium doesn’t detect element id all the time,  so I’ve had to use uiautomatorviewer. But uiautomatorviewer fails while using Appium. Any tips?</p>

<p>Make sure to end any existing Android automation sessions before using uiautomatorviewer. Once you have identified the elements using the viewer tool, then you can update the tests and run them via Appium.</p>

<p>Another workflow is to use the ruby_console to dynamically identify the elements and then interact with them before updating the test code.</p>

<p>Given that I have an app which makes online data exchanges through APIs, and as I want to write reproducible functional tests with Appium, how can I set up an environment to mock my app’s webservices calls in my testing scenarios?</p>

<p>Mocking an app’s webservice calls is a general testing issue and is unrelated to appium. I suggest researching appropriate mocking solutions for your language to see how others have accomplished this.</p>

<p>I have a good working knowledge of Selenium WebDriver 2.0 and of using Page Objects. Does Appium also has the same approach since Appium is using JSON driver behind the scenes?</p>

<p>Yes, the same approach is used.</p>

<p>Hi, I understand that Appium creates only one session for iOS as Apple UIAutomator does not support multiple iOS device support in parallel, whereas in Android, multiple devices are supported and hence each session maps with one devices. Is that correct?</p>

<p>Yes, running in parallel is currently limited to Android due to Apple’s limitations. A work around is to use Sauce Labs as they overcome the one device per machine via virtualization.</p>

<p>How is the support for scrolling going to improve? Currently it is very flaky to scroll up or down.</p>

<p>Properly writing scrolling code is a challenge. I’ve found using explicit waits helps resolve flakiness. On iOS it’s a bit easier because automation of invisible elements is possible. For Android, we’re limited to visible elements. I use complex_find on Android to scroll to elements. A better way is coming soon in Appium that’s easier to use.</p>

<p>Please send some examples of  the multi action gesture API role in Appium?</p>

<p>Check out the unit tests for the various Appium client bindings to see examples of the gesture api.</p>

<p>Ruby bindings<br>
Python bindings<br>
Java bindings<br>
JavaScript bindings<br>
PHP bindings<br>
C# bindings<br>
How do I handle situations such as when Appium just fails, saying Javascript fail error (sendkeys throwing js error on line 68, failed, or my R&amp;D says that Appium was not able to get the page source and that it may be because of a lot of data)?</p>

<p>Please report the issue on GitHub along with a way to reproduce the failure. On iOS I’m aware of a similar problem that’s being looked into. If the Appium devs can reproduce the problem then it’s much easier to fix.</p>

<p><strong>How do I make static text (e.g. labels) appear in Appium inspector?</strong></p>

<p>Properly making your app accessible, such as adding accessibility labels, is well documented by Google and Apple for Android and iOS respectively. I suggest consulting the documentation. Once your app is properly following the guidelines, then the labels will be visible to appium for automation.</p>

<p><strong>How transparent would it be to associate Android and iOS devices/VMs/Emulators with our Selenium Grid infrastructure to use automated tests using Appium?</strong></p>

<p>It’s entirely possible to set up local infrastructure. In my experience, this involves a lot of work so it’s better to use a service provider such as Sauce Labs.</p>

<p>I have seen user reporting lost of issue in Maverics OS using Appium …. how does the Appium project plan to address all these issues? </p>

<p>I have been using Appium on Mavericks without any issues. Make sure to use the newest version of OS X, Xcode, and Appium.</p>

<p><strong>Is it possible to switch between native app and Safari when executing the workflow?</strong></p>

<p>On iOS, this isn’t possible. The automation session is restricted to the app context and switching out will end the session. For Android, you could switch between the app and the Chrome browser without issue.</p>

<p>I use Firefox’s Responsive Web &amp; UserAgent override to inspect Mobile Web Objects. Is there anything on the roadmap to inspect WebObjects directly from Appiums Inspector?</p>

<p>I recommend using the Chrome Dev tools instead of waiting for the Appium inspector to support web apps. The existing browser tools already work well for this purpose.</p>

<p>I’d love your recommendation for the best emulator for both iPhone and Android</p>

<p>This is highly specific to the business requirements of the app under test. I test on Android using a Nexus 7 and an iPhone Simulator. Sauce Labs supports a bunch of configurations to it’s up to the tester to decide what screen sizes and devices make sense.</p>

<p>I’m working on a mobile website project. Will Appium work for just mobile web, or is it specifically for hybrid and native apps?</p>

<p>Appium works well for mobile web, hybrid, and native apps. It’s not exclusive to any one of them.</p>

<p>If someone wanted to contribute to the most immediate need, what would that be? Features? Documentation? Quick Start Guide? Specific Language Usage Examples?</p>

<p>The most immediate need is documentation. The documentation files are hosted on GitHub and pull requests are welcome. Other areas to contribute include:</p>

<p>Additional examples for the sample code<br>
Answer questions on the mailing list<br>
Contribute to the tutorial Currently on Ruby and Java are covered.<br>
If we want to be able to fully automate testing, we need to be able to respond to system prompts, like those that appear to allow the app to use location services or access contacts. Our experience with Appium thus far is that there’s no means to respond. Can you elaborate?</p>

<p>I suggest asking this question on the discussion list. I’m pretty sure that someone has figured out a work around.</p>

<p>In the future, will Appium support running multiple mobile test cases on simulators/emulators and real devices in parallel, instead of running tests one after another? </p>

<p>That’s already supported on Android. For iOS, Apple does not allow it. I suggest using a solution provider such as Sauce Labs that uses VMs to bypass this Apple limitation.</p>

<p>Inspector of Appium for Windows is much Flakey. Selendroid now doesnt gives Bounds/Size in PageSource.</p>

<p>For Selendroid, try their dedicated inspector tool</p>

<p>Is Appium 1.0.0 stable working for older Android like 4.2.x?<br>
Appium works well on older Androids via Selendroid. uiautomator with Appium is available for API 17 and above.</p>

<p><strong>Is Appium mainly for functional testing or integration testing? My company’s mobile device hits a webservice which returns a SQLite database, which we need to inspect for accuracy, once it’s been returned. Is this possible with Appium, even partially?</strong></p>

<p>Appium is meant for end to end UI Testing, similar to how WebDriver is used to automate browsers. The situation described seems better suited for a web service unit test. I don’t see how a user of the app would inspect a SQLite database so appium doesn’t seem appropriate.</p>

<p><strong>Is it always required that the Android app I’m testing have accessibility features (to locate the elements)? or I can use the simulator/recorder to locate those elements record tests for any app?</strong></p>

<p>Accessibility features are not required. You can automate the app anyway however the other locator strategies will be brittle. The benefit of accessibility is the labels remain constant over the life cycle of the app. As the app changes, it’s better if tests continue working without having to update the locators.</p>

<p><strong>Is there a plan to support testing on multiple iOS devices?</strong></p>

<p>Apple hasn’t communicated about lifting this restriction. The current supported way is using Sauce Labs or another provider that handles parallelization.</p>

<p><strong>Is there an easy way to setup Appium registered “devices” to Selenium GRID so that you can have a single point of access for tests?</strong></p>

<p>A selenium grid is possible to setup. It’s not easy.</p>

<p>Just a suggestion, I also believe that we need more robust &amp; rigorous UnitTest to be integrated with Appium CI, as the Appium release breaks a functionality or two while delivering another cool functionality.</p>

<p>I completely agree. I have experienced this issue and understand the frustration regressions cause. Proper unit testing with continuous integration is a work in progress. The goal is to have all Appium bindings in addition to the Appium server running robust unit tests via CI.</p>

<p>Last time I tried Appium, I had difficulty dealing with alerts coming from the OS or iTunes store (for payment automation). Does Appium 1.0 deal with OS/iTunes alerts better?</p>

<p>I’m not sure. If there’s a way to automate them with UI Automation JavaScript, then it’ll work with appium.</p>

<p>I need Appium/Node Logs to be consumed using a remote webdriver client. The WebDriver client is on remote m/c, so reading the log file doesn’t help much. Can we have a method to get log dumps via Appium-driver?</p>

<p>I believe there’s an open issue related to this. It makes sense to expose the logs via the Selenium log API. Currently supported logs include syslog (iOS), crashlog (iOS), and logcat (Android).</p>

<p>New to Appium, will soon use it. I briefly went over the multi action gestures. Are there any complex gestures that are not yet implemented? (or are still quirky/buggy)</p>

<p>So far the gestures seem to be working well.</p>

<p>One more question: Does Appium support C#, Java and Python languages?<br>
Yes. Appium has client bindings for Ruby, Python, Java, JavaScript, PHP, and C#.</p>

<p>One of the big pain points for our QA is matching the implemented UI with the screen shots that our design team has put together. One guy in particular reached the laughing/crying stage imagining aloud the possibility of automation handling the comparison.</p>

<p>My personal opinion is that automatically matching design images to an app is not going to produce useful results. Appium supports screenshots so you’re welcome to try.</p>

<p>One of the requirements is XCode. Is Appium compatible with other IDEs, e.g. AppCode by Jetbrains?</p>

<p>Appium requires that Xcode is installed, not that you use it. Appium works with every IDE and can even be used without one.</p>

<p>Parallel execution always wonderful when it comes to faster testing. But iOS again some limitations. How are we going to address this?</p>

<p>The immediate solution is to use Sauce Labs. The longer term solution is to persuade Apple to stop limiting their automation technology.</p>

<p>Possibility to mock/stub webservices calls?</p>

<p>Mocks and Stubs are certainly possible. This is a general testing issue and is unrelated to appium.</p>

<p>Robotium can assert Android toasts by using something like waitForText(). Can Appium do the same thing?</p>

<p>uiautomator does not support toasts. Selendroid does.</p>

<p>A Selenium grid basically helps to redirect test cases to right devices … will this help with iOS as we are not able to run the iOS devices in parallel due to Apple limitation.</p>

<p>You could setup your own grid or use an existing solution provider such as Sauce Labs. Grid is not a magic solution to Apple’s limitation on parallelization.</p>

<p>Should we also depreciate/discourage usage of Android version less than 4.2?(Coz UIAutomator came at 4.2, and Selendroid is not stable to use)</p>

<p>I haven’t had good luck with Selendroid either so I only use uiautomator.</p>

<p>I’m attending this webinar to learn about Appium as someone who has never used it to automate testing. I enjoy being able to view screen shots in Sauce when I check my Selenium results… can Appium tests provide the same kind of screen shot results?</p>

<p>Yes, Sauce provides the same support for Appium including screenshots and videos. Locally, you would have to write the code to take the screenshots. I have open sourced a screen recorder for OS X that works with the iOS Simulator and Android emulator.</p>

<p>We had trouble writing tests that interact with tableViews, despite the fact that they are a common element  in iOS gui development. We’ve seen that this is on the list of known issues. Is addressing this on the roadmap in the near future?</p>

<p>I suggest opening an issue on GitHub and include an example that reproduces the problem. My understanding is that tableViews should not have problems on iOS.</p>

<p>**Does Sauce Labs provide training for using Appium with Sauce? **</p>

<p>That’s a question to ask the sales team at Sauce Labs. I am working on screencast training that will be available to everyone for free.</p>

<p><strong>Can you speak to whether/when you plan to address how to respond to prompts? Any workarounds available now?</strong></p>

<p>I suggest posting on the discussion list. There are various ways to respond to prompts.</p>

<p>We had trouble migrating tests that ran on Firefox into tests that ran on Internet Explorer. Is it really that easy to migrate our tests to mobile with different browsers?</p>

<p>Appium enables you to automate mobile browsers. Chrome is a different browser from Safari so there will be differences. Browser automation has been successfully done for many years now. It’s entirely possible to test on multiple browsers.</p>

<p>We have the behavior that tests run locally stable and sometimes fail on the Appium server. For us this is not reproducible and could not determine why we have this instability. Do you know that? How do fix?</p>

<p>Flakiness can be caused by a large number of issues:</p>

<p>test written incorrectly<br>
timing issues<br>
app bugs<br>
appium server bugs<br>
appium client bugs<br>
underlying automation bugs<br>
emulator/simulator bugs<br>
device specific bugs<br>
network connectivity<br>
environment configuration<br>
software versions<br>
If you post on the discussion list with specifics, then someone may be able to provide guidance.</p>

<p>We start our Appium tests with Jenkins and have in one example job 5 tests. From time to time we have 6 test result? Do you know why? It it a Appium issue?</p>

<p>This isn’t an Appium issue. There’s something broken with your test infrastructure if you’re randomly having an extra test result.</p>

<p><strong>What are the changes app developers need to make in-app in order for visible property to be true in Appium inspector?</strong></p>

<p>On Android, everything is always visible if it’s in the inspector. On iOS, if the element is displayed on screen then it should be visible -although sometimes it isn’t. Unfortunately there’s not much you can do to control the visibility attribute.</p>

<p><strong>What are your future goals for automating  native apps for Samsung TV and Apple TV using Appium?</strong></p>

<p>I’m not aware of specific goals to support TV automation. If the TV runs Android then it may work.</p>

<p><strong>What is the best test reporting plugin for mobile that would fit with Appium (JUnit) to be included in CI?</strong></p>

<p>JUnit has numerous plugins for various CI solutions that enable reporting. This isn’t Appium specific or unique to mobile. I suggest researching online to find out what others are using.</p>

<p><strong>What is the main difference between Selandroid and Appium?</strong></p>

<p>Selendroid only supports Android and uses an instrumentation approach. Appium allows automation of iOS and Android. Appium supports Selendroid as one option and also allows using the more modern uiautomator technology.</p>

<p><strong>What native application support does Appium offer?</strong></p>

<p>Appium supports fully automating native apps on Android and iOS. On Android there’s a choice of Selendroid or uiautomator. On iOS, UI Automation JavaScript is used behind the scenes.</p>

<p>Please suggest an operating system on which one should primarily test when launching Android – I.E. Linux, OSX, Windows…?</p>

<p>OS X</p>

<p><strong>When I run Appium, I got the following error, “Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.” What can I do on my end to fix this?</strong></p>

<p>This is a common issue. I suggest posting to the mailing list if it happens frequently.</p>

<p><strong>When I tried Appium I found it was difficult to pick objects; it seems I need extensive xpath knowledge. Do you have plan to create an object library layer?</strong></p>

<p>The Ruby binding has a helper library so you can use a generic find command that’ll work on almost anything. There are specific helpers for buttons, textfields, text, and alerts. I recommend not using XPath on Android as it’s flaky due to a known Android problem. With all the selector methods available, finding elements is very easy. First select which attribute you’re using to find the element then select the best selector.</p>

<p>When might Ruby users expect switch_to() to be implemented? We have many  hybrid apps that need context switching.</p>

<p>The new Ruby bindings have implemented context switching via set_context. Known issues are in the process of being fixed; these will improve the reliability of context switching.</p>

<p><strong>Will there be a Appium conference soon?</strong></p>

<p>App-solutely! For information about the Appium conference, please read this mailing list thread.</p>

<p><strong>Will there ever be integrated support for CI though Sauce Labs?</strong></p>

<p>Sauce Labs integrates with CI providers such as CloudBees. All CI solutions should be able to integrate with Sauce Labs. There are even plugins available.</p>

<p>You mentioned earlier that you are working on ‘Getting Started’ materials and tutorials… any idea on when you might be ready to release these and where should I look to find them?</p>

<p>These are already available on Appium.io. Check out the documentation, tutorials, and sample code.</p>

<p>You mentioned you now now support Android hybrid apps without Selenium. Which version of Appium supports this, and are there docs that show how to do this?</p>

<p>On Android API 19, Appium is able to connect directly to webviews via chromedriver when using uiautomator. The client libraries have support for listing the webview context and switching into it and back to the native app.</p>
      </div>

      <div class="excellent">
        <i class="icon small_cert_on"></i> 本帖已被设为精华帖！
      </div>

      

      <div class="tools pull-right">
  
  <a class="likeable" href="../account/password/edit"><i class="icon small_like"></i> <span>喜欢</span></a>
  
  <a href="http://cli.im/api/qrcode"><i class="icon icon-qrcode"></i>二维码</a>
</div>
<div class='social-share-button' data-title='Appium 1.0 webinar 上的一些问答 via: @testerhome ' data-img='' data-url=''>
<a class="social-share-button-twitter" data-site="twitter" href="1029#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Twitter"></a>
<a class="social-share-button-facebook" data-site="facebook" href="1029#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Facebook"></a>
<a class="social-share-button-google_plus" data-site="google_plus" href="1029#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到Google+"></a>
<a class="social-share-button-weibo" data-site="weibo" href="1029#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到新浪微博"></a>
<a class="social-share-button-douban" data-site="douban" href="1029#" onclick="return SocialShareButton.share(this);" rel="nofollow " title="分享到豆瓣"></a>
</div>

    </div>
  </div>

    <div id="replies" class="box box_gray">
      <div class="total">
        共收到 <b>6</b> 条回复
      </div>
      <div class="items">
        
          <div class="reply" id="reply1">
    <div class="pull-left face"><a href="../luis"><img alt="213" class="uface" src="../user/large_avatar/213.jpg" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="" href="../luis">luis</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply1">1楼</a> · <abbr class="timeago" title="2014-06-18T22:39:36+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5876" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="213" href="http://testerhome.com/topics/1029/replies/5876/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="1" data-login="luis" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p>👍</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>
<div class="reply" id="reply2">
    <div class="pull-left face"><a href="../Monkey"><img alt="118" class="uface" src="../user/large_avatar/118.png" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="monkey" href="../Monkey">monkey</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply2">2楼</a> · <abbr class="timeago" title="2014-06-18T23:29:28+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5877" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="118" href="http://testerhome.com/topics/1029/replies/5877/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="2" data-login="monkey" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p>这个是要翻译的么。。＝ ＝</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>
<div class="reply" id="reply3">
    <div class="pull-left face"><a href="../lihuazhang"><img alt="110" class="uface" src="../user/large_avatar/110.jpg" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="恒温" href="../lihuazhang">lihuazhang</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply3">3楼</a> · <abbr class="timeago" title="2014-06-18T23:45:05+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5879" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="110" href="http://testerhome.com/topics/1029/replies/5879/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="3" data-login="lihuazhang" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p>求翻译</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>
<div class="reply" id="reply4">
    <div class="pull-left face"><a href="../oscarxie"><img alt="4d43b8fa1e25dfac428fff0d828b3934" class="uface" src="../avatar/4d43b8fa1e25dfac428fff0d828b3934.png?s=96&amp;d=404" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="国文" href="../oscarxie">oscarxie</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply4">4楼</a> · <abbr class="timeago" title="2014-06-19T10:53:52+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5893" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="115" href="http://testerhome.com/topics/1029/replies/5893/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="4" data-login="oscarxie" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p><a href="../Monkey" class="at_user" title="@monkey"><i>@</i>monkey</a>, 这个还要翻译？不能直接看么</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>
<div class="reply" id="reply5">
    <div class="pull-left face"><a href="../Monkey"><img alt="118" class="uface" src="../user/large_avatar/118.png" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="monkey" href="../Monkey">monkey</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply5">5楼</a> · <abbr class="timeago" title="2014-06-19T11:37:14+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5895" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="118" href="http://testerhome.com/topics/1029/replies/5895/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="5" data-login="monkey" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p><a href="1029#reply4" class="at_floor" data-floor="4">#4楼</a> <a href="../oscarxie" class="at_user" title="@oscarxie"><i>@</i>oscarxie</a> 。。。。这个。不能只有我们看得懂。。＝ ＝</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>
<div class="reply" id="reply6">
    <div class="pull-left face"><a href="../seveniruby"><img alt="104" class="uface" src="../user/large_avatar/104.jpg" style="width:48px;height:48px;" /></a></div>
    <div class="infos">
      <div class="info">
        <span class="name">
          <a data-name="思寒" href="../seveniruby">seveniruby</a>
        </span>
        <span class="time">
          <a class="reply-floor" href="1029#reply6">6楼</a> · <abbr class="timeago" title="2014-06-19T13:47:49+08:00"></abbr>
        </span>
        <span class="opts">
            <a class="likeable" data-count="0" data-id="5897" data-state="" data-type="Reply" href="1029#" onclick="return App.likeable(this);" rel="twipsy" title="喜欢"><i class="icon small_like"></i> <span>喜欢</span></a>
            <a class="edit icon small_edit" data-uid="104" href="http://testerhome.com/topics/1029/replies/5897/edit" title="修改回帖"></a>
            <a class="icon small_reply" data-floor="6" data-login="seveniruby" href="1029#" title="回复此楼"></a>
        </span>
      </div>
      <div class="body">
        <p><a href="1029#reply3" class="at_floor" data-floor="3">#3楼</a> <a href="../lihuazhang" class="at_user" title="@lihuazhang"><i>@</i>lihuazhang</a>  这个翻译量不是一般的大啊</p>
      </div>
      <span class="opts">
      </span>
    </div>
</div>

      </div>
      
    </div>

      <div id="reply" class="form box">
    <div style="padding:20px;">
    需要 <a class="btn btn-primary" href="../account/password/edit">登录</a> 后回复方可回复, 如果你还没有账号你可以 <a class="btn btn-danger" href="../account/sign_up">注册</a> 一个帐号。
    </div>
</div>
</div>

  <div class="sidebar">
    
    <div class="box">
  <h2 class="title">小帖士</h2>
  <div class="content">
    @shixue33 我想~~~在深圳找个好工作~~~找个男朋友！
  </div>
</div>
    <div class="box clearfix">
  <h2 class="title">节点下其他话题</h2>
  <ul>
    <li><a href="1918" title="iOS 运行第二个 case 时报 500 错误">iOS 运行第二个 case 时报 500 错误</a></li>
    <li><a href="1917" title="Appium">Appium</a></li>
    <li><a href="1912" title="如何测试微信公众号里面的页面">如何测试微信公众号里面的页面</a></li>
  </ul>
</div>

  </div>

    </div>
  </div>

  <a class="go_top" href="1029#"><i class="icon icons_go_top"></i></a>
  <footer class="footer">
    <div class="container">
      <div class="container">
      <div class="pull-right" style="width:200px; text-align:right;">
<a href="http://www.ucloud.cn/?ref=testerhome.com" target="_blank" rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="本站服务器由 Ucloud 赞助"><img src="../photo/2014/ace04e205ff40be04f47de439d253b59.png" style="height:28px"></a>
</div>

<div>
<div class="pull-left" style="margin-right:10px;">
<img src="../photo/2015/7b5b57bb91762429809a9f95255392ad.png" style="width:48px;">
</div>
<p class="links">

<a href="143">关于</a> | 
<a href="http://weibo.com/u/3871514412">微博</a> | 
<a href="../users.1">活跃用户</a> | 
<a href="node13">反馈</a> | 
<a href="https://github.com/testerhome">Github</a> |
<a href="../wiki/spreadtesterhome">帮助推广</a> |  
<a href="http://www.miibeian.gov.cn/">京ICP备13049862号</a>


</p>
<p class="copyright">
TesterHome 移动测试社区，由众多移动测试工作者维护，致力于推进国内测试技术。
</p>
<p class="copyright">
友情链接

<a href="http://ruby-china.org/"  rel="twipsy" style="display:inline-block;margin-right:5px;" data-original-title="感谢RubyChina提供建站代码">Ruby-China</a> | 
<a href="http://www.diggerplus.org/">DiggerPlus</a> | 
<a href="http://www.testwo.com/">测试窝</a> | 
<a href="http://www.kootest.com/">酷测</a> | 
<a href="http://itest.info/">重定向科技</a> |
<a href="http://www.robotium.cn/">Robotium 中国</a> |
<a href="http://cafe.testin.cn/">Testin开发者社区</a>
<script src="http://s4.cnzz.com/z_stat.php?id=1000474281&web_id=1000474281" language="JavaScript"></script>

</p>

</div>
    </div>






    </div>
  </footer>
  <script type="text/javascript" data-turbolinks-eval=false>
    App.root_url = "http://testerhome.com/";
    App.asset_url = "http://testerhome.com";
    App.faye_client_url = "http://testerhome.com:8080/faye";
    if (App.faye_client_url) {
      App.initNotificationSubscribe();
    }
  </script>
    <script type="text/javascript">
    Topics.replies_per_page = 50;
    $(document).ready(function(){
    })
  </script>

  <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-45014075-1']);
      _gaq.push(['_setSiteSpeedSampleRate', 100]);
      _gaq.push(['_trackPageview']);
      u=document.getElementById("user_menu");
      ur="";
      if(u) ur=document.getElementById("user_menu").innerText.split(" ")[0]
      _gaq.push(['_setCustomVar', 1,'user',ur,1]);

      (function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  </script>

  <div class="zoom-overlay"></div>
</body>
</html>
