<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>TesterHome 社区 测试书籍 节点</title>
    <link>http://testerhome.com/</link>
    <description>TesterHome 社区 测试书籍 节点最新发帖.</description>
    <item>
      <title>《大话移动测试——Android 与 iOS 应用测试指南》第二版增加内容</title>
      <description>&lt;p&gt;这本书目前很多中奖的同学都已经拿到了。预购的同学还需要再等等，今天我刚刚催过，京东就这几天就会有货了。还请大家息怒。&lt;br&gt;
  第一版的帖子看这里：&lt;a href="http://testerhome.com/topics/1099" rel="nofollow" target="_blank"&gt;http://testerhome.com/topics/1099&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;应广大同学要求，我这里记录一下第二版要增加的东西。&lt;br&gt;
  Android iOS BDD框架使用和实践&lt;br&gt;
  iOS 测试框架介绍和使用&lt;br&gt;
  Android 安全测试，本地和网络安全&lt;br&gt;
  Android iOS编译打包项目中的实践，增加gradle和mvn，以及CocoaPods内容&lt;br&gt;
  增加蓝牙，NFC等测试方法&lt;br&gt;
  增加SDK的测试&lt;br&gt;
  全面的讲解Android，iOS的性能测试，包括方法，以及如何制定指标&lt;br&gt;
  增加Appium的架构讲解以及实践案例&lt;/p&gt;

&lt;p&gt;未完待续。。。。＝ ＝&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Thu, 24 Jul 2014 13:52:11 +0800</pubDate>
      <link>http://testerhome.com/topics/1169</link>
      <guid>http://testerhome.com/topics/1169</guid>
    </item>
    <item>
      <title>《大话 app 测试——Android、iOS 应用测试指南》热购开始啦！！！</title>
      <description>&lt;p&gt;《大话移动——Android与iOS应用测试指南》京东可以预购啦！&lt;a href="http://item.jd.com/11495028.html" rel="nofollow" target="_blank"&gt;http://item.jd.com/11495028.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当当网：&lt;a href="http://product.dangdang.com/23510301.html#catalog" rel="nofollow" target="_blank"&gt;http://product.dangdang.com/23510301.html#catalog&lt;/a&gt;。大家速度预购哈～～～&lt;/p&gt;

&lt;p&gt;这本书离不开大家的支持。其中感谢给我写书评的几位大牛。@熊力_LiXiong @阿里窥基 @徐毅-Kaveri @左耳朵耗子 。明天京东的链接也出来啦～～&lt;/p&gt;

&lt;p&gt;&lt;img src="/photo/2014/b8f7c2f88a2b7109e9edef3f74165365.png" alt=""&gt;&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Thu, 03 Jul 2014 20:30:50 +0800</pubDate>
      <link>http://testerhome.com/topics/1113</link>
      <guid>http://testerhome.com/topics/1113</guid>
    </item>
    <item>
      <title>《大话移动测试——Android 与 iOS 应用测试指南》封面和公开章节集合</title>
      <description>&lt;p&gt;刚链接有问题，我重新发下。&lt;br&gt;
书的目录：&lt;a href="http://t.cn/8snlxo7" rel="nofollow" target="_blank"&gt;http://t.cn/8snlxo7&lt;/a&gt;。 &lt;br&gt;
第二章试读：&lt;a href="http://t.cn/8FbnS7S" rel="nofollow" target="_blank"&gt;http://t.cn/8FbnS7S&lt;/a&gt;。&lt;br&gt;
第一章试读：&lt;a href="http://t.cn/8FAtRNK" rel="nofollow" target="_blank"&gt;http://t.cn/8FAtRNK&lt;/a&gt;。&lt;br&gt;
第八章试读：&lt;a href="http://t.cn/8F9ex30" rel="nofollow" target="_blank"&gt;http://t.cn/8F9ex30&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;这本书虽然是一本测试的书，但是从本质上更多的说明了一种做事的积极态度以及一种自我的高要求。谢谢大家～～&lt;br&gt;
&lt;img src="/photo/2014/e5bfb51a19578d495a550e5f454bd752.jpg" alt=""&gt;&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Tue, 01 Jul 2014 20:50:01 +0800</pubDate>
      <link>http://testerhome.com/topics/1099</link>
      <guid>http://testerhome.com/topics/1099</guid>
    </item>
    <item>
      <title>《大话移动测试——Android 与 iOS 应用测试指南》目录曝光</title>
      <description>&lt;p&gt;目录&lt;br&gt;
前言... 3&lt;br&gt;
一．移动互联网面试... 6&lt;br&gt;
1.1            为什么要面试... 6&lt;br&gt;
1.2            面试的流程... 7&lt;br&gt;
1.3            面试的频率... 8&lt;br&gt;
1.4            面试实战... 8&lt;br&gt;
1.5            如何正确的考核测试人员... 12&lt;br&gt;
1.6            移动互联网测试招聘现状... 16&lt;br&gt;
1.7            大公司和小公司... 17&lt;br&gt;
1.8            测试外包... 19&lt;br&gt;
第二章 病态的现状... 21&lt;br&gt;
2.1            全民挖金... 21&lt;br&gt;
2.2            别人的嫁衣... 23&lt;br&gt;
2.3            超越光速的迭代... 27&lt;br&gt;
2.4            可怜的测试团队... 29&lt;br&gt;
2.5            敏捷中毒... 30&lt;br&gt;
2.6            无力的测试... 30&lt;br&gt;
2.7            浮躁的测试工程师们... 32&lt;br&gt;
2.8            测试沙龙和培训... 34&lt;br&gt;
2.9            学会自我尊重... 35&lt;br&gt;
2.10         总结... 36&lt;br&gt;
第三章 用户体验测试... 37&lt;br&gt;
3.1            移动互联网与传统互联网体验区别... 37&lt;br&gt;
3.2            Android vs Ios. 39&lt;br&gt;
3.3            愚笨的用户——用户引导... 46&lt;br&gt;
3.4            捣乱的用户——应用容错... 52&lt;br&gt;
3.5            专业精神——风格一致性... 56&lt;br&gt;
3.6            我即最终用户：过程体验测试... 59&lt;br&gt;
3.7            使用更多的应用：对比体验测试... 62&lt;br&gt;
3.8            模拟场景体验测试... 63&lt;br&gt;
3.9            用户究竟关心什么？... 65&lt;br&gt;
3.10         用户体验的问题是Bug吗？... 68&lt;br&gt;
3.11         如何提升自身的用户体验经验？... 69&lt;br&gt;
第四章  功能测试要点... 71&lt;br&gt;
4.1            多分辨率测试... 71&lt;br&gt;
4.2            多系统测试... 72&lt;br&gt;
4.3            用户不同的使用习惯... 74&lt;br&gt;
4.4            网络的不稳定性... 80&lt;br&gt;
4.5            安装卸载测试... 82&lt;br&gt;
4.6            升级测试... 84&lt;br&gt;
4.7            并发测试... 86&lt;br&gt;
4.8            数据来源... 87&lt;br&gt;
4.9            推送... 88&lt;br&gt;
4.10         分享跳转... 90&lt;br&gt;
第五章  常用工具介绍和实践... 92&lt;br&gt;
5.1            Monkey. 92&lt;br&gt;
5.1.2 Monkey测试工具实例... 93&lt;br&gt;
5.1.3 Monkey测试日志查看... 94&lt;br&gt;
5.1.4 Monkey测试注意点... 97&lt;br&gt;
5.1.5 Monkey工具再探索... 98&lt;br&gt;
5.2            Emulator 99&lt;br&gt;
5.2.1 模拟器和真机的差异... 99&lt;br&gt;
5.1.2Genymotion. 101&lt;br&gt;
5.1.3 模拟器常用功能举例... 103&lt;br&gt;
5.3            MonkeyRunner 105&lt;br&gt;
5.4            Hierarchyviewer 108&lt;br&gt;
5.5            DDMS. 112&lt;br&gt;
5.6            Compatibility Test Suite. 115&lt;br&gt;
5.7            Tcpdump/WireShark. 117&lt;br&gt;
5.8            Findbugs. 119&lt;br&gt;
5.9            Lint 120&lt;br&gt;
5.10         反编译、重编译... 122&lt;br&gt;
5.11         Ant 125&lt;br&gt;
5.12         Charles. 127&lt;br&gt;
5.13         Instruments. 129&lt;br&gt;
第六章 常用框架介绍和实践... 133&lt;br&gt;
6.1            Instrumentation. 133&lt;br&gt;
6.2            Emma Code Coverage. 138&lt;br&gt;
6.3            robolectric. 147&lt;br&gt;
第七章 移动应用测试案例实践分析... 161&lt;br&gt;
7.1            深入了解被测试对象... 161&lt;br&gt;
7.2            多种数据来源... 163&lt;br&gt;
7.3            在生活中使用产品... 165&lt;br&gt;
7.4            社交应用分层设计实践案例... 167&lt;br&gt;
7.5            联系人搜索案例测试设计实践... 173&lt;br&gt;
第八章——性能测试介绍和实践... 181&lt;br&gt;
8.1            Emmagee. 181&lt;br&gt;
8.2            Instrumentation. 184&lt;br&gt;
8.3            HPROF. 187&lt;br&gt;
8.4            Gfxinfo. 189&lt;br&gt;
8.5            Systrace. 191&lt;br&gt;
8.6            TraceView.. 193&lt;br&gt;
8.7            Instruments—Leaks. 195&lt;br&gt;
8.8            Android多分辨率自动化实践... 198&lt;br&gt;
第九章 测试人员的自我修养（吐槽篇）... 202&lt;br&gt;
9.1            学会提出和解决问题... 202&lt;br&gt;
9.2            正确的自我审视... 203&lt;br&gt;
9.3            不要被业界世俗的讨论蒙蔽... 204&lt;br&gt;
9.4            寻找测试的本质... 206&lt;br&gt;
9.5            主观能动... 206&lt;br&gt;
9.6            你真的会使用搜索引擎吗... 208&lt;br&gt;
9.7            每天都要学习... 209&lt;br&gt;
9.8            学会判断轻重缓急... 210&lt;br&gt;
第十章 测试行业常见问题（解答篇）... 210&lt;br&gt;
问题一：没有做过测试的人怎么入门测试？... 211&lt;br&gt;
问题二：测试工程师要具备什么能力？... 212&lt;br&gt;
问题三：测试比开发技术含量低吗？... 212&lt;br&gt;
问题四：参加测试培训能有多少提升？... 213&lt;br&gt;
问题五：黑盒测试有价值吗？... 214&lt;br&gt;
问题六：手动测试有价值吗？... 215&lt;br&gt;
问题七：移动互联网应用怎么做自动化测试？... 215&lt;br&gt;
问题八：测试人员选择进入大公司还是小公司？... 217&lt;br&gt;
问题九：  中国高校有软件测试专业吗... 217&lt;br&gt;
第十一章 博客摘要... 219&lt;br&gt;
11.1         “ 我们需要专职的QA吗？”... 219&lt;br&gt;
11.2         学习让测试更精彩，测试让生命更精彩... 222&lt;br&gt;
11.3         “中国人的纠结”. 227&lt;br&gt;
11.4         “黑盒不是白盒的绊脚石”... 230&lt;br&gt;
11.5         “测试需要反省“... 231&lt;br&gt;
11.6         《钝感力》有感--测试中的钝感力... 232&lt;br&gt;
后记... 234&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Tue, 29 Apr 2014 11:54:58 +0800</pubDate>
      <link>http://testerhome.com/topics/768</link>
      <guid>http://testerhome.com/topics/768</guid>
    </item>
    <item>
      <title>Monkey 移动无线测试新书第二章 2.6、2.7 试读</title>
      <description>&lt;p&gt;喜欢纯干货的同学可以跳过前面几章的试读，本书宗旨在于务实，讲任何实际看到过，经历过的大实话，在各个方向给测试同仁指引方向，其中只有四章是纯技术章节，所以并非纯技术书籍：）感谢大家支持&lt;br&gt;
第一章的分享链接：&lt;a href="http://testerhome.com/topics/395" rel="nofollow" target="_blank"&gt;http://testerhome.com/topics/395&lt;/a&gt; &lt;br&gt;
2.6   无力的测试&lt;br&gt;
  自Google的Android系统面世以来，机型层出不穷，各种各样的Rom也是扑天盖地。Android从最早的1.0版本在短短4年的时间内升级到了现在的4.2版本，其升级速度实属罕见。这样就大大增加了测试工程师的碎片化测试，直到我写这本书的今天，Android2.3依然拥有着一部分的受众。这对于开发和测试都是极大的挑战。&lt;/p&gt;

&lt;p&gt;相信所有Android的开发工程师都不会忘记为了让应用能够在Android各个版本的智能机上获得更好的体验而一遍遍的适配的痛苦。而此时测试工程师们面临着一个基本上无解的问题——Android智能机的适配测试该怎么做？在这个问题面前任何精湛的测试技术都变的苍白无力。相信很多做过Android应用测试的人都会一种经历，在公司内部的测试已经自信满满的结束了，但一旦发布到用户使用的时候，各种明显的缺陷瞬间可以淹没企业通讯系统。我相信每个人都会曾经因为这样的情况无力过。&lt;br&gt;&lt;img src="/photo/2014/7665c2caf22027f6c74f24133f5d2aad.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;此时有两个很不错的解决方案放在眼前，1.Android模拟器 2.使用Testin或MTC这样的兼容性测试平台。我可以很负责的告诉大家，这两者就截至到现在都是不可靠的。&lt;br&gt;
  Android模拟器的确是可以模拟各种分辨率以及各种Android版本系统，但模拟器由于是Java虚拟机构成，在任何配置的PC上其性能都很慢。并且就我自己前两年测试国内外各个智能机的经验来讲，模拟器中的应用显示以及功能和真实机器还是相差很远，更不用说象小米或索尼爱立信这类定制过的智能机。&lt;br&gt;
  Testin是一家我很看好的公司，在2012年12月我还有幸能够去其公司学习他们是如何做大量的智能机的应用自动化测试。但我觉得不可靠的原因有两点。其一，无论Testin还是MTC，目前的兼容性测试服务做的还不够成熟，使用过的人都知道，现在移动互联网兼容性测试平台是能够很好的支持在各种智能机上面的安装、卸载、打开、MonkeyTest等测试。但是仅仅这些测试并不能满足我们日常的测试要求。其二，这类测试毕竟是借助第三方平台进行的测试，如果我的上司或客户让我给出一份产品的兼容性测试报告，我是无论如何都不可能将第三方平台的测试结果给他们看的。毕竟作为测试工程师，我只相信我真正测试过的以及我看到的，这类测试报告只能当作一种参考。那么有朋友肯定要问我们测试工程师该怎么办？可参考后面几章。&lt;/p&gt;

&lt;p&gt;苹果的iOS在兼容性方面比Android出色的多，但是测试工程师的测试同样非常的无力。兼容性好和不用测试并不能划等号，而苹果的iphone、ipad价格一直不低，一般企业管理层认为各一台就足够了，这给苹果应用的兼容性测试带来了极大的困难。随着苹果ios系统遭破解（也就是所谓的越狱），出现了很多系统插件，这类插件某些情况下面会非常大的破坏Ios原本的生态平衡。也使得原来正常运行的软件会变的不稳定，自此越狱系统也被纳入了不得不去测试的范畴。而苹果的app store审核机制对测试工程师更是雪上加霜，苹果应用的审核一般要一周左右的时间（节假日不包括），意味着产品发布之后如果有严重的问题，不能马上用一个新的版本替换，只能先从市场上下架。所以Ios应用的测试工程师压力相比会更大。&lt;br&gt;
  那么移动互联网的测试工程师到底应该怎么做测试呢？如何改变这样的现状呢？本书的各个章节只是给了一些引导方向，更多的还是需要大家根据公司，项目，人员等具体情况具体分析。&lt;/p&gt;

&lt;p&gt;2.7   浮躁的测试工程师们&lt;br&gt;
本小节仅仅写给测试业界里那些浮躁的测试工程师们，切勿对号入座。测试业界中除了一些有技术的牛人和一些会忽悠的“大佬”以外，剩下的工程师们大多针扎在各个企业中。他们不仅和开发做斗争，还需要和生活和薪资做斗争。从长期来看，这些人大部分时间就是在浪费时间，不学无术，但他们自己却还觉得社会很不公平，各种委屈。我列出一些浮躁行为，大家切勿对号入座：&lt;/p&gt;

&lt;p&gt;1)  社交中毒&lt;br&gt;
  我自己在刚学习测试的时候加过非常多的群，原认为能够在有问题的时候找到几个“高手”来解决问题。直到我加了之后，我才发现几乎所有的群都是整天聊天，毫无任何技术讨论。群中关心的问题无非是&lt;br&gt;
a)  薪资，别人拿多少钱，自己拿多少钱，然后开始讨论怎么样才能够拿到更多的钱。&lt;br&gt;
b)  抱怨，抱怨团队，抱怨流程，抱怨老板。抱怨一切可以抱怨的事情。&lt;br&gt;
c)  公司，大家开始晒各自的公司，大公司的人就会受到很多人的敬仰。&lt;br&gt;
d)  求职，不停的销售自己。&lt;br&gt;
QQ的确是一个好软件，在中国长期以来积累了大量用户并屹立不到。但它就和毒品一样让人上瘾，在不知不觉中浪费了时间，也将全部整块的时间变的碎片化。曾经现任豆瓣技术总监的段念告诉我，不要去企图在QQ群上得到很多核心的技术，更多的只是在浪费时间，我现在也越来越体会到这点。&lt;br&gt;
  我只想问那些在QQ上讨论以上提到这几点的测试工程师们，你们与其在群上聊天，不如将这些时间用来学习，你们觉得这个解决方法怎么样？&lt;/p&gt;

&lt;p&gt;2)  失去自理能力&lt;br&gt;
  在我长期QQ隐身在线期间，看到很多测试工程师作为一个健全的，甚至是一个技术人员，却完全不会自理。比如以下几个连续的问题经常会出现：&lt;br&gt;
·      我想学习MonkeyRunner，请问MonkeyRunner能做点什么？&lt;br&gt;
·      MonkeyRunner环境已经配置好了，请问怎么写？有没有什么例子？&lt;br&gt;
·      请问MonkeyRunner除了模拟用户操作还能做什么？&lt;br&gt;
·      有没有什么文档？&lt;br&gt;
·      …&lt;br&gt;
这些问题不是仅仅出现在移动互联网，只要这些测试工程师们不改变自己学习的态度和习惯，那么在任何一个领域任何一个技术上都会出现同样的问题。他们面对一个对他们是未知的事物完全就丧失了自理能力。我能说的是，Android或者别的所有技术都能够在自己的开源文档或者WIKI找到很详细的描述，请自行学习。&lt;/p&gt;

&lt;p&gt;3)  不能正确认识自己的价值&lt;br&gt;
  曾经我在新浪微博上面发过以这样一段对话：&lt;br&gt;
  A：“你好，你这边招聘测试工程师吗？薪资大概多少？”&lt;br&gt;
  我：“你好，具体看应聘者的能力而定”&lt;br&gt;
  A：“我以前就是做Android的，有5年工作经验，很符合你们的要求”&lt;br&gt;
  A：“还在不在？我是本科毕业，做5年大概能拿多少钱？”&lt;br&gt;
  A：“这个是我的简历，5年你差不多给个价就行了。”&lt;br&gt;
  我：“…”&lt;/p&gt;

&lt;p&gt;很多朋友肯定觉得上面这个测试工程师怎么那么傻，自己肯定不是他这样的。不过从事实来看，测试业界的确还有不少这样的“工程师”。他们有几个特点：1.对别人的薪资很感兴趣 2.不务实，不知道如何自己解决问题 3.只从薪资，学历，工作年限来评价一个工程师。&lt;br&gt;
  一名测试的工程师的价值到底是如何考核的？绝对不仅仅只有学历，工作年限，薪资等来评价，关于这点在第一章已经详细叙述了。同样的，有的人一边工作一边总结，同时一直和业界的其他工程师沟通交流，每天都有进步。而有的人仅仅是在工作，每天做着重复的业务，那么工作十年二十年和工作一年没有区别。我们需要正确的去评价看待自己。&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Sun, 19 Jan 2014 00:59:45 +0800</pubDate>
      <link>http://testerhome.com/topics/417</link>
      <guid>http://testerhome.com/topics/417</guid>
    </item>
    <item>
      <title>Android Studio 入门指南(PDF)</title>
      <description>&lt;p&gt;发贴竟然不能放附件..so只能把下载地址放在这里了。大家自取哈！！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;下载地址：Android Studio入门指南 &lt;a href="http://download.csdn.net/detail/wirelessqa/6509095," rel="nofollow" target="_blank"&gt;http://download.csdn.net/detail/wirelessqa/6509095,&lt;/a&gt;看看评介还是不错的！！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;另外github上也可以下载：&lt;br&gt;&lt;a href="https://github.com/bxiaopeng/AndroidStudio/tree/master/pdf" rel="nofollow" target="_blank"&gt;https://github.com/bxiaopeng/AndroidStudio/tree/master/pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原贴在这里：&lt;a href="http://blog.csdn.net/wirelessqa/article/details/14222041" rel="nofollow" target="_blank"&gt;http://blog.csdn.net/wirelessqa/article/details/14222041&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有问题多交流！！&lt;/p&gt;</description>
      <author>wirelessqa</author>
      <pubDate>Fri, 17 Jan 2014 16:44:57 +0800</pubDate>
      <link>http://testerhome.com/topics/416</link>
      <guid>http://testerhome.com/topics/416</guid>
    </item>
    <item>
      <title>Monkey 新书第一章两节内容试读</title>
      <description>&lt;p&gt;先在这里祝大家新年快年，我最近一直在说书要白写了，原因在于很多同学问的问题我书中都有，但是现在都不得不开放部分小节在各个论坛上，就感觉白写了。。＝ ＝。。。&lt;br&gt;
  不过由于2013年年底前往支付宝，以至于没有在计划中完成，向大家道歉。这里先开放第一章《移动互联网测试面试》中的第六，七节供大家试读。喜欢纯干货的同学可以跳过前面几章的试读，本书宗旨在于各个方向给测试同仁指引方向，并非纯技术书籍：）&lt;/p&gt;

&lt;p&gt;以下是Monkey写于2013年4月。  &lt;/p&gt;

&lt;p&gt;移动互联网测试招聘现状&lt;br&gt;
  这里所描述的现状，时间截至到作者写这本书的时间。下面列出了一份我们常见的移动软件测试的JD：&lt;br&gt;&lt;img src="/photo/2014/b2552a8fdb0053ab18dbf139e4a0a373.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;整个移动互联网测试的就业出现了一种很奇特的现象。应聘需求量非常大，但是应聘者却不知道以什么样的技能和能力去应聘。相对的，招聘需求量也很大，但是从千篇一律的招聘简章（如上图）中看得出来，大部分的企业和面试官自己都不清楚自己需要什么样子的测试人员。这种情况直接导致了面试过程的不规范性，面试官盲目的考核应聘者。很多企业的测试人员的面试仅仅就是编程和算法的面试，当应聘者问自己到企业具体做什么的时候，往往都得不到确切的答案。&lt;/p&gt;

&lt;p&gt;曾经有一个刚面试完的测试从业人员问我一个问题“我想找份自己理想的测试工作，但是经过几次面试之后，我迷茫了。你能否告诉我，我到底要学什么？”。其实我认识他也很久了，对他问出这样的问题我既感兴趣又觉得难过，问其原因，得到答案是这样的，“其实开始我觉得自己还清楚要学什么，但是经过几次面试，看到很长很长的笔试题以及各种和软件测试好像毫无关系的面试题之后，我开始觉得自己什么都欠缺，开始怀疑自己。”我其实并不惊讶听到这样的回答，因为自己看到过太多这样的情况。 &lt;/p&gt;

&lt;p&gt;我见过很多测试人员换工作的理由是一直做手工测试，想学习自动化测试（当然隐含着待遇差的意思）。从短期来看，换工作可能会解决他们的问题。但是从长远来看，到了任何一家企业只要时间够长，我们总会觉得到达一种学习瓶颈，觉得没有进步，都是自己熟悉的东西。所以换工作其实并不解决问题的本质。一名测试人员如果要有长期和系统的提升，必须要不被自己所在的企业、团队、项目等因素所限制，学会自己定目标，自己不停的学习才是真正的解决之道。&lt;/p&gt;

&lt;p&gt;大公司和小公司&lt;br&gt;
  很多应届生或测试从业人员在面临这样的问题的时候往往不知道怎么做：你眼前放着一家知名大型企业和一家创业小公司，那么你会选择哪一家？在我的面试生涯中，遇见过大大小小企业出来的测试人员。大家看了之后心里可能就会有自己的答案了。&lt;/p&gt;

&lt;p&gt;故事一：王小姐，所在企业：某知名互联网企业， 职位：软件测试工程师&lt;/p&gt;

&lt;p&gt;其实在我拿到她简历的时候还是很高兴的，因为看到简历上满满的项目经历，又是在知名互联网企业，对于我自己所在的创业公司在讲是很难能可贵的。所以我满心欢喜的开始了我的面试。部分对话如下：&lt;/p&gt;

&lt;p&gt;我：请问以前项目测试用例都是你们自己编写的吗？&lt;br&gt;
  王小姐：由于我们公司人很多，项目环节分的很细，所以编写测试用例是由另外一个组的测试人员负责，不是我们自己写的。&lt;br&gt;
  我：那么你们平时除了执行测试用例之外，还做点别的什么类型的测试吗？&lt;br&gt;
  王小姐：使用一些工具进行自动化测试。&lt;br&gt;
  我：这些工具你有了解过怎么实现的，或者运行原理是什么呢？&lt;br&gt;
  王小姐：没有关注，只是去使用进行测试产品。&lt;br&gt;
  我：你为什么离职呢？&lt;br&gt;
  王小姐：主要觉得工作太枯燥，没有学习和进步空间，都做了好几年了。&lt;/p&gt;

&lt;p&gt;从上面的对话当中不难看出，虽然王小姐有着不错的工作背景，但是其实虚的很，我想大多数的面试官无法接受她。移动互联网企业就近几年开始越来越看重实际能力，学历或者企业背景已经没有以前那么大的比重了。自然王小姐没有通过我的面试。&lt;br&gt;
  如果你有机会进入一家知名大企业工作，那么绝对是一个不错的机会。你可能能够在一个很好的团队，做一个很好的项目。可能有很积极的环境，认识很多技术厉害的同事等等。好好利用这些资源，都是能够让自己的能力在短时间内得到巨大的提升，如果这么好的环境下，你还在混日子的话，只能说自己放弃自己了，那就更别提能得到面试官的青睐了。&lt;/p&gt;

&lt;p&gt;故事二：张女士，所在企业：某移动互联网创业公司，职位：高级软件测试工程师&lt;/p&gt;

&lt;p&gt;这份简历也是让我比较看好的，原因在于张女士的背景让她肯定能够更快的适应创业公司的氛围，并且从职位上来看能力应该也不错。我继而高兴的开始面试。部分对话如下：&lt;/p&gt;

&lt;p&gt;我：张女士，请问平时会怎么进行Android的测试呢？大概测试一个产品的周期是多久呢？&lt;br&gt;
  张女士：我以前在创业公司，公司就我一个测试人员，测试用例，文档都是我自己写的。平时目前主要都是功能测试，自动化测试自己也在研究，目前只是执行一下Android的MonkeyTest。测试产品的话一个月左右发布版本一次。&lt;br&gt;
  我：张女士，我想问下，Monkey工具具体是怎么执行的？会加哪些参数？你是怎么学习的呢？&lt;br&gt;
  张女士：就是一句脚本执行一下，每次执行几万次的样子，并没有增加什么特定的参数。&lt;br&gt;
  我：请问是否仔细看过Google的Android开源文档呢？&lt;br&gt;
  张女士：好像公司都是开发在看，我自己没有怎么仔细看，英语不是很好。&lt;/p&gt;

&lt;p&gt;从上面的对话也不难看出，张女士对于在公司就自己一个测试人员很是自豪，这点自信对于测试人员其实很难能可贵。但是她却有点“闭门造车”，缺乏与其他测试人员以及同行的交流。在我看来，没有看过Android开源文档的测试和没有接触过Android测试可以划等号。所以结果张女士同样没有通过我的面试考核。&lt;br&gt;
  如果你有机会进入一家创业并且你是一个愿意接受挑战的人的话，那么绝对是一个不错的机会。你可能能够接触到整个项目，你可能会远离办公室政治，远离那些条条框框，你可能能全面发展你自己的能力，并不仅限于测试。&lt;/p&gt;

&lt;p&gt;我相信有朋友肯定觉得疑惑，上面说的都是进入两种不同企业的优势，但是都是“可能”。那么我们怎么增加“可能”的概率呢？这需要我们正确的审视这家企业，审视自己。你需要在面试结束之后让自己清晰的了解以下几个问题：&lt;br&gt;
1)  这家企业做什么产品，我是否有兴趣&lt;br&gt;
2)  这家企业目前有多少测试，分别是负责做什么的，目前整体的测试的深度大概达到多少&lt;br&gt;
3)  自己进入这家企业具体是做什么测试，是功能测试，还是压力测试，还是各种都会接触&lt;br&gt;
4)  企业管理层对于测试人员的职业规划以及将来的发展是怎么考虑的&lt;br&gt;
可能有的朋友也会说，你去面试，不见的所有的企业都会告诉你以上这些问题的答案。的确，我也遇见过这样的企业。试问，如果在面试的时候企业都不能回答你这些问题，这样的公司你敢去吗？你真的愿意去吗？难道只是为了眼前的那些薪资？希望大家好好思考一下。&lt;/p&gt;

&lt;p&gt;测试外包&lt;br&gt;
  如果你曾经是一个想找一份测试工作的人的话，那么对外包这个词绝对不会陌生。在业界，似乎测试和外包是双生儿，有测试的地方必有外包，而有外包的地方必有测试。国内外有名的外包公司都是以输出测试人才为主要业务。我个人是不排斥外包这样一个形式的，相反的是身边很多能力强的前辈都是外包出身。但是需要注意以下几点：&lt;br&gt;
1)  要前往好的项目组工作&lt;br&gt;
2)  如公司内部没有很好的流程和技术积累，最好要外派性质&lt;br&gt;
3)  一般外包工作不要超过2年，但也不绝对，视具体情况而定&lt;br&gt;
4)  看清楚即将签的合同&lt;br&gt;
  从行业普遍的情况来讲，外包性质的工作都是去相对好的国内外大企业，并且入职要求相对比正式员工低很多，对于很多刚加入测试行业的从业者来讲是一个不错的选择。但是如果不仔细挑选的话，很容易造成廉价劳动力，工作没有归属感等情况出现。所以当你决定从事外包工作的时候，一定要慎重。&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Sun, 12 Jan 2014 14:13:32 +0800</pubDate>
      <link>http://testerhome.com/topics/395</link>
      <guid>http://testerhome.com/topics/395</guid>
    </item>
    <item>
      <title>google 软件测试之道</title>
      <description>&lt;p&gt;每天，Google都要测试和发布数百万个源文件、亿万行的代码。数以亿计的构建动作会触发几百万次的自动化测试，并在好几十万个浏览器实例上执行。面对这些看似不可能完成的任务，谷歌是如何测试的呢？&lt;br&gt;
《Google软件测试之道》从内部视角告诉你这个世界上知名的互联网公司是如何应对21世纪软件测试的独特挑战的。《Google软件测试之道》抓住了Google做测试的本质，抓住了Google测试这个时代最复杂软件的精华。《Google软件测试之道》描述了测试解决方案，揭示了测试架构是如何设计、实现和运行的，介绍了软件测试工程师的角色；讲解了技术测试人员应该具有的技术技能；阐述了测试工程师在产品生命周期中的职责；讲述了测试管理及在Google的测试历史或在主要产品上发挥了重要作用的工程师的访谈，这对那些试图建立类似Google的测试流程或团队的人受益很大。&lt;br&gt;
最后，《Google软件测试之道》还介绍了作者对于Google测试如何继续演进的见解、Google乃至整个业界的测试方向的一些预言，相信很多读者都会感受到其中的洞察力，甚至感到震惊。本书可以作为任何从事软件测试人员到达目标的指南。&lt;br&gt;
《Google软件测试之道》适合开发人员、测试人员、测试管理人员使用，也适合大中专院校相关专业师生的学习用书，以及培训学校的教材。&lt;/p&gt;</description>
      <author>tony</author>
      <pubDate>Wed, 06 Nov 2013 14:22:53 +0800</pubDate>
      <link>http://testerhome.com/topics/181</link>
      <guid>http://testerhome.com/topics/181</guid>
    </item>
  </channel>
</rss>
