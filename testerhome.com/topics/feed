<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>TesterHome社区</title>
    <link>http://testerhome.com/</link>
    <description>TesterHome社区最新发帖.</description>
    <language>en-us</language>
    <item>
      <title>猎头职位，上海水果领域垂直电商招聘测试工程师</title>
      <description>&lt;p&gt;上海水果领域垂直电商招聘测试工程师，主要是后台电商交易相关的测试，3－5年，懂selenium，有一定的白盒和黑盒测试经验 ，薪资范围在12－20K/M×14个月（分中级和高级职位）。&lt;/p&gt;

&lt;p&gt;欢迎有相关经验的朋友联系我。工作地点，上海 虹桥机场附近，地铁2号线  淞虹路出来即达 &lt;/p&gt;

&lt;p&gt;邮箱：bendypan@silverlightjob.com        QQ: 364334205  微信：bendypan001  （请注明名字和方向，谢谢）&lt;/p&gt;</description>
      <author>bendypan</author>
      <pubDate>Thu, 22 Jan 2015 08:45:12 +0800</pubDate>
      <link>http://testerhome.com/topics/1916</link>
      <guid>http://testerhome.com/topics/1916</guid>
    </item>
    <item>
      <title>求留下 testerhome</title>
      <description>&lt;p&gt;需要testerhome，留个脚印吧，证明我们多么需要它。&lt;/p&gt;</description>
      <author>doctorq</author>
      <pubDate>Wed, 21 Jan 2015 15:43:09 +0800</pubDate>
      <link>http://testerhome.com/topics/1914</link>
      <guid>http://testerhome.com/topics/1914</guid>
    </item>
    <item>
      <title>uiautomator 执行完成后 手机没有反应</title>
      <description>&lt;p&gt;这是cmd运行的结果&lt;br&gt;
&lt;img src="/photo/2015/8064bb6945fad6c9b09ba81fde958256.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;这是我的代码&lt;br&gt;
&lt;img src="/photo/2015/31b1c390bc8b1401a38b9823acfed180.png" alt=""&gt;&lt;/p&gt;

&lt;p&gt;请问是我代码问题还是别的什么问题&lt;/p&gt;</description>
      <author>xuanwei</author>
      <pubDate>Wed, 21 Jan 2015 11:55:29 +0800</pubDate>
      <link>http://testerhome.com/topics/1913</link>
      <guid>http://testerhome.com/topics/1913</guid>
    </item>
    <item>
      <title>如何测试微信公众号里面的页面</title>
      <description>&lt;p&gt;我们是一家电商公司，微信公众号里面的页面是H5页面，如何切换content进去测试h5页面呢？&lt;/p&gt;

&lt;p&gt;Thread.sleep(15000);// &lt;br&gt;
        for(String winHandle : driver.getContextHandles()){&lt;br&gt;
            System.out.println(winHandle);&lt;br&gt;
        }&lt;/p&gt;

&lt;p&gt;NATIVE_APP&lt;/p&gt;

&lt;p&gt;请各位帮忙看看&lt;/p&gt;</description>
      <author>app_testing</author>
      <pubDate>Wed, 21 Jan 2015 11:29:17 +0800</pubDate>
      <link>http://testerhome.com/topics/1912</link>
      <guid>http://testerhome.com/topics/1912</guid>
    </item>
    <item>
      <title>最新一期测试小道消息预告</title>
      <description>&lt;p&gt;本次邀请到了重量级的嘉宾——测试窝的创始人熊志男！&lt;/p&gt;

&lt;p&gt;测试窝是我们的合作伙伴之一～测试窝最近也和thoughtworks一直合作举办各种活动&lt;/p&gt;

&lt;p&gt;熊总在这个其中功不可没。熊总本人和名字很不相符，本人是一个身材苗条的测试人～熊总有着很丰富的测试经验，本次熊总要和我们分享在项目中敏捷如何灵活运用&lt;/p&gt;

&lt;p&gt;时间就是在1月21号晚上9点。&lt;/p&gt;

&lt;p&gt;在线直播YY：26645402。更多精彩内容下载荔枝fm，关注测试小道消息或者关注FM245329～&lt;/p&gt;

&lt;p&gt;大家记得来哟～&lt;/p&gt;</description>
      <author>monkey</author>
      <pubDate>Wed, 21 Jan 2015 11:18:23 +0800</pubDate>
      <link>http://testerhome.com/topics/1911</link>
      <guid>http://testerhome.com/topics/1911</guid>
    </item>
    <item>
      <title>appium 对 ios 自动化测试：IOS 元素如何精确定位？元素 id 如何获得？用 xpath 不合适，经常会变化</title>
      <description>&lt;p&gt;1 如题，软件处于开发期，用appium inspector 获得ios控件xpath编写测试脚本，发现控件xpath经常会变，导致测试脚本需要经常修改。希望能获得控件的id或其他能唯一定位控件位置的参数来定位控件位置，有什么好用的工具获得控件的id或者通过何种方式能唯一定位控件位置呢？&lt;br&gt;
请教了ios开发，这里说的ios控件id貌似是tag_name吧，可是有很多控件没有定义tag_name,此时如何定位呢？class name或者什么方式呢？&lt;br&gt;
2 xpath定位控件的所有格式都有哪些呢？希望各位前辈指点下&lt;/p&gt;</description>
      <author>crease</author>
      <pubDate>Wed, 21 Jan 2015 11:10:38 +0800</pubDate>
      <link>http://testerhome.com/topics/1910</link>
      <guid>http://testerhome.com/topics/1910</guid>
    </item>
    <item>
      <title>【北京】【易到用车】招自动化测试工程师（移动方向）</title>
      <description>&lt;p&gt;职位描述：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;负责无线客户端GUI、接口的自动化测试工具的开发和维护；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;负责设计、构建和优化CI集群，开发和维护相关工具；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;负责根据项目和产品特点需求，制定自动化测试方案，提高测试效率；&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;职位要求&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;计算机或其他相关专业，二年以上的开发/测试工作经验；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;精通软件测试理论和方法，熟悉GUI、接口自动化测试用例设计；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;熟练掌握Java/Python等主流语言中的一门，熟悉Linux/Unix，有实际的编程开发、自动化测试和持续集成经验；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;熟悉HTTP协议、RESTful API等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;熟悉Jenkins，Git，Gradle，Maven，Junit，Robotium，Appium等优先；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开源框架爱好者，参与过开源项目开发或者维护的优先；&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;具体信息可以参考拉钩&lt;a href="http://www.lagou.com/jobs/396626.html" rel="nofollow" target="_blank"&gt;http://www.lagou.com/jobs/396626.html&lt;/a&gt;&lt;br&gt;
年前面试，年后入职，内推联系方式，wanyukang@yongche.com&lt;/p&gt;</description>
      <author>cjtcwyk</author>
      <pubDate>Tue, 20 Jan 2015 16:33:11 +0800</pubDate>
      <link>http://testerhome.com/topics/1908</link>
      <guid>http://testerhome.com/topics/1908</guid>
    </item>
    <item>
      <title>Appium 框架中，是如何做延时处理的？</title>
      <description>&lt;p&gt;经常在测试时会遇到网络情况不好的时候，而此时需要打开这个界面后，才能执行这个操作。&lt;br&gt;
如果此时因为网络慢，而导致在执行当前操作时，该操作界面还没有来得及显示在屏幕上，该如何处理？&lt;/p&gt;
&lt;pre class="highlight java"&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;elementExist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;locator&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
         &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
             &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;until&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ExpectedCondition&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                 &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Boolean&lt;/span&gt; &lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WebDriver&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findElement&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locator&lt;/span&gt;&lt;span class="o"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;isDisplayed&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                 &lt;span class="o"&gt;}&lt;/span&gt;
             &lt;span class="o"&gt;});&lt;/span&gt;
         &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;

         &lt;span class="o"&gt;}&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;</description>
      <author>wangcityboy</author>
      <pubDate>Tue, 20 Jan 2015 16:30:38 +0800</pubDate>
      <link>http://testerhome.com/topics/1907</link>
      <guid>http://testerhome.com/topics/1907</guid>
    </item>
    <item>
      <title>安卓怎么用 Appium 定位元素呢</title>
      <description>&lt;p&gt;设置了Appium配置，然后运行Appium，运行Inpector，但是跑不起来，报错了。&lt;br&gt;
错误信息是：&lt;br&gt;
info: [debug] Error: Command failed: ADB server didn't ACK&lt;br&gt;
* could not start server *&lt;/p&gt;

&lt;p&gt;at ChildProcess.exithandler (child_process.js:658:15)&lt;br&gt;
    at ChildProcess.emit (events.js:98:17)&lt;br&gt;
    at maybeClose (child_process.js:766:16)&lt;br&gt;
    at Socket.&amp;lt;anonymous&amp;gt; (child_process.js:979:11)&lt;br&gt;
    at Socket.emit (events.js:95:17)&lt;br&gt;
    at Pipe.close (net.js:466:12)&lt;br&gt;
info: [debug] Responding to client with error: {"status":33,"value":{"message":"A new session could not be created. (Original error: Command failed: ADB server didn't ACK\n* could not start server &lt;em&gt;\n)","killed":false,"code":255,"signal":null,"origValue":"Command failed: ADB server didn't ACK\n&lt;/em&gt; could not start server *\n"},"sessionId":null}&lt;br&gt;
info: &amp;lt;-- POST /wd/hub/session 500 17166.155 ms - 296 &lt;/p&gt;

&lt;p&gt;这个是什么问题呢？&lt;/p&gt;</description>
      <author>ceshichen</author>
      <pubDate>Tue, 20 Jan 2015 16:13:01 +0800</pubDate>
      <link>http://testerhome.com/topics/1906</link>
      <guid>http://testerhome.com/topics/1906</guid>
    </item>
    <item>
      <title>Ping++招聘软件测试工程师</title>
      <description>&lt;p&gt;职位描述&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;你有丰富的测试经验，拥有良好的视角，致力于解放测试行业的生产力&lt;/li&gt;
&lt;li&gt;熟悉 html、javascript、http 协议&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;你将负责：&lt;br&gt;
1. 负责 Ping++ 的官网和管理平台的测试&lt;br&gt;
2. 负责 Ping++ 客户端 SDK，服务器端 SDK，Demo 程序的测试&lt;br&gt;
3. 协助改进流程，帮助开发更高效更放心地迭代他们的作品&lt;br&gt;
4. 给 Ping++ 的产品找茬，让它变得更完美&lt;/p&gt;

&lt;p&gt;百年之后，你我的肉身终将陨灭，而我们的精神和梦想依然可以在代码中相见。我们满怀期待，期待优秀的你，来一起定义 Ping++&lt;/p&gt;

&lt;p&gt;加分项：1.自动化 2.Linux环境配置 3.自学能力&lt;/p&gt;

&lt;p&gt;联系方式：hr@pingplusplus.com&lt;/p&gt;

&lt;p&gt;Junior 6K起&lt;/p&gt;

&lt;p&gt;Senior 10K起&lt;br&gt;
BASE: 在浦东广兰路2号线附近&lt;/p&gt;</description>
      <author>ftvbftvbq</author>
      <pubDate>Tue, 20 Jan 2015 15:56:06 +0800</pubDate>
      <link>http://testerhome.com/topics/1905</link>
      <guid>http://testerhome.com/topics/1905</guid>
    </item>
    <item>
      <title>iOS pullFile 接口获取 iOS 真机设备文件提示没有实现</title>
      <description>&lt;p&gt;Appium Client SDK 版本:1.2.1&lt;br&gt;
Appium Server 版本：1.3.4&lt;/p&gt;

&lt;p&gt;经过测试，Android平台下，pullFile取设备文件，接口是实现了的，并且测试通过。&lt;br&gt;
但是在IOS平台下，pullFile抛出未实现的异常。&lt;/p&gt;

&lt;p&gt;请教一个论坛的达人，&lt;br&gt;
1. Appium在哪个版本支持了获取IOS设备文件pullFile功能？&lt;br&gt;
2. 还有没有其他替代的方案，可以获取当前App所在目录下的文件？&lt;/p&gt;

&lt;p&gt;谢谢。&lt;/p&gt;</description>
      <author>sevenseven</author>
      <pubDate>Tue, 20 Jan 2015 14:09:58 +0800</pubDate>
      <link>http://testerhome.com/topics/1904</link>
      <guid>http://testerhome.com/topics/1904</guid>
    </item>
    <item>
      <title>Appium 已支持中文输入（给还不知道已支持中文输入的同学）</title>
      <description>&lt;p&gt;Appium 1.3.3以上。&lt;br&gt;
java：&lt;br&gt;
capabilities增加下面两项：&lt;/p&gt;
&lt;pre class="highlight java"&gt;&lt;span class="n"&gt;capabilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setCapability&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unicodeKeyboard"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"True"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;capabilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setCapability&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"resetKeyboard"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"True"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;python：&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;span class="n"&gt;desired_caps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"unicodeKeyboard"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"True"&lt;/span&gt;
&lt;span class="n"&gt;desired_caps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"resetKeyboard"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"True"&lt;/span&gt;
&lt;/pre&gt;</description>
      <author>xuxu</author>
      <pubDate>Tue, 20 Jan 2015 12:33:26 +0800</pubDate>
      <link>http://testerhome.com/topics/1903</link>
      <guid>http://testerhome.com/topics/1903</guid>
    </item>
    <item>
      <title>Appium 偶尔会找不到 iOS 上的控件</title>
      <description>&lt;p&gt;大家遇到过这个问题么？Appium运行App，写了Python脚本，循环执行同一个动作。一样的流程，Appium会有一定的概率，找不到对应的控件，导致Crash。你们有碰到过这问题么&lt;/p&gt;</description>
      <author>ceshichen</author>
      <pubDate>Tue, 20 Jan 2015 00:04:21 +0800</pubDate>
      <link>http://testerhome.com/topics/1902</link>
      <guid>http://testerhome.com/topics/1902</guid>
    </item>
    <item>
      <title>求大神支招，获取相同 id 的控件。</title>
      <description>&lt;p&gt;&lt;img src="/photo/2015/1e1ab013dfa7173c480f64dcc3a09ad0.png" alt=""&gt;&lt;br&gt;
菜鸟一枚，被相同id的控件搞的很无奈，这种id相同的不知道怎么定位。还有很多类似的情况，id相同，text也相同。&lt;/p&gt;</description>
      <author>kesha0</author>
      <pubDate>Mon, 19 Jan 2015 22:43:04 +0800</pubDate>
      <link>http://testerhome.com/topics/1901</link>
      <guid>http://testerhome.com/topics/1901</guid>
    </item>
    <item>
      <title>Appium 中如何实现自定义的 UiWatcher 类</title>
      <description>&lt;p&gt;Android的app跑appium时有时会弹出一些alert，Appium中如何实现监听这个对话框? UIAutomator 里有这个UiWacher: &lt;a href="http://developer.android.com/tools/help/uiautomator/UiWatcher.html" rel="nofollow" target="_blank"&gt;http://developer.android.com/tools/help/uiautomator/UiWatcher.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Appium的server段代码中也自定义了一些watcher来处理anr和crash，但是没找到如何在client端创建自定义的Watcher，求指教...&lt;/p&gt;</description>
      <author>xiaorudk</author>
      <pubDate>Mon, 19 Jan 2015 17:22:39 +0800</pubDate>
      <link>http://testerhome.com/topics/1900</link>
      <guid>http://testerhome.com/topics/1900</guid>
    </item>
    <item>
      <title>http 接口+python 自动化脚本</title>
      <description>&lt;p&gt;http接口本就不适应自动化测试，所以只是写了个简单的小脚本，为了把结果写到excel里，费了点脑筋。网上资料也少，做个记录，代码如下：&lt;/p&gt;
&lt;pre class="highlight python"&gt;&lt;span class="c"&gt;#-*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;xlrd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;xlwt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;time&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xlutils.copy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;tim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;Y-&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;m-&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;d &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;H:&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;M:&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;S'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tim&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"test begin: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;#开始时间&lt;/span&gt;

&lt;span class="n"&gt;oldwb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xlrd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_workbook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r'url.xls'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;oldsh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;oldwb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheet_by_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;nrows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;oldsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nrows&lt;/span&gt;
&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oldwb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_sheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#第一次调用xlrd，xlwt&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disable_ssl_certificate_validation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'status'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#https请求方法&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;GetHttpTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disable_ssl_certificate_validation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;End&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;End&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Start&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;
&lt;span class="c"&gt;#获取请求时间&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrows&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;oldsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url1&lt;/span&gt;
    &lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;GetHttpTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;GetHttpTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Normal'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Timeout'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'newurl.xls'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#将复制过的数据保存在newurl.xls&lt;/span&gt;

&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xlrd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_workbook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r'newurl.xls'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheet_by_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;nroNws&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nrows&lt;/span&gt;
&lt;span class="n"&gt;oldwb1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newwb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;oldsh1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;oldwb1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_sheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#第二次调用xlrd，xlwt，复制newurl.xls到url.xls进行实际结果与预期结果对比&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nroNws&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;EX_reusult&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="n"&gt;AC_reusult&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;newsh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;EX_reusult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AC_reusult&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;oldsh1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"PASS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;oldsh1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"FAIL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;oldwb1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'url.xls'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"test over: "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c"&gt;#结束时间&lt;/span&gt;


&lt;span class="o"&gt;=========================================================================&lt;/span&gt;
&lt;span class="err"&gt;在放一段&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="err"&gt;的读写&lt;/span&gt;
&lt;span class="c"&gt;#-*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;relist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'请输入url： '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;relist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;relist&lt;/span&gt;
&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;tim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;Y-&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;m-&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;d &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;H:&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;M:&lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;S'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tim&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;httplib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;disable_ssl_certificate_validation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'status'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;relist&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;url1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;"200"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"urlhttps-result.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"测试日期："&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s"&gt;"请求失败，错误代码为："&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"请求失败"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;GetHttpStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"请求成功------------------------"&lt;/span&gt;
&lt;/pre&gt;</description>
      <author>duanxu3</author>
      <pubDate>Mon, 19 Jan 2015 16:14:45 +0800</pubDate>
      <link>http://testerhome.com/topics/1899</link>
      <guid>http://testerhome.com/topics/1899</guid>
    </item>
    <item>
      <title>在运行测试时遇到 Test run failed: Instrumentation run failed due to 'Process crashed.'，有人遇到过吗，求解答</title>
      <description>&lt;p&gt;运行第一个测试用例时遇到这样的问题。&lt;br&gt;
package com.example.com.sinanew.www;&lt;/p&gt;

&lt;p&gt;import android.app.Activity;&lt;br&gt;
import android.graphics.AvoidXfermode;&lt;br&gt;
import android.test.ActivityInstrumentationTestCase2;&lt;/p&gt;

&lt;p&gt;import com.robotium.solo.Solo;&lt;/p&gt;

&lt;p&gt;public class TestOne extends ActivityInstrumentationTestCase2 {&lt;/p&gt;

&lt;p&gt;private static String LAUNCHER_ACTIVITY_FULL_CLASSNAME ="com.sina.news.ui.PowerOnScreen";&lt;br&gt;
    private static String packageName = "com.sina.news";&lt;br&gt;
    private static Class launcherActivityClass;&lt;/p&gt;

&lt;p&gt;static{&lt;br&gt;
        try {&lt;br&gt;
            launcherActivityClass = Class.forName(LAUNCHER_ACTIVITY_FULL_CLASSNAME);&lt;br&gt;
        } catch (ClassNotFoundException e) {&lt;br&gt;
            e.printStackTrace();&lt;br&gt;
        }&lt;br&gt;
    }&lt;/p&gt;

&lt;p&gt;public TestOne() {&lt;br&gt;
        super(packageName,launcherActivityClass);&lt;/p&gt;

&lt;p&gt;}&lt;br&gt;
    protected Solo solo;&lt;br&gt;
    public Activity activity;&lt;/p&gt;

&lt;p&gt;&lt;a href="/Override" class="at_user" title="@Override"&gt;&lt;i&gt;@&lt;/i&gt;Override&lt;/a&gt;&lt;br&gt;
    protected void setUp() throws Exception{&lt;br&gt;
        this.activity = this.getActivity();&lt;br&gt;
        solo = new Solo(getInstrumentation(), getActivity());&lt;/p&gt;

&lt;p&gt;}&lt;br&gt;
    &lt;a href="/Override" class="at_user" title="@Override"&gt;&lt;i&gt;@&lt;/i&gt;Override&lt;/a&gt;&lt;br&gt;
    protected void tearDown() throws Exception {&lt;br&gt;
        //super.tearDown();&lt;br&gt;
        try{&lt;br&gt;
        solo.finishOpenedActivities();&lt;/p&gt;

&lt;p&gt;} catch (Exception e) {&lt;/p&gt;

&lt;p&gt;e.printStackTrace();&lt;br&gt;
        }&lt;/p&gt;

&lt;p&gt;}&lt;br&gt;
    public void testLogin() {&lt;br&gt;
        solo.sleep(10000);&lt;br&gt;
        //solo.waitForText("Log In",1,10000);&lt;br&gt;
        //solo.clickOnText("Log In");&lt;br&gt;
    }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;&lt;img src="/photo/2015/d0bb7b200116856a00f6e9552eee6ac3.png" alt=""&gt;&lt;br&gt;
&lt;img src="/photo/2015/a9be9e3ae2ccee0e358ce36b680c2946.png" alt=""&gt;&lt;/p&gt;</description>
      <author>xuanwei</author>
      <pubDate>Mon, 19 Jan 2015 12:48:31 +0800</pubDate>
      <link>http://testerhome.com/topics/1898</link>
      <guid>http://testerhome.com/topics/1898</guid>
    </item>
    <item>
      <title>ebay 移动测试会 ppt 和视频资料汇总《整理完毕》</title>
      <description>&lt;h4&gt;PPT&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pan.baidu.com/s/1kTl6Bmn" target="_blank"&gt;Web UI Automation in CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pan.baidu.com/s/1gdH2QYZ" target="_blank"&gt;appium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://yunpan.cn/cyT5jk8iwHgbq" target="_blank"&gt;Gradle&lt;/a&gt;  （提取码：5cf6） &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://yunpan.cn/cKgRKBrsjQVtB" target="_blank"&gt;eBay测试平台&lt;/a&gt;   （提取码：b6a0）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;视频&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://yunpan.cn/cyTeg7NWpM834" target="_blank"&gt;eBayTest视频1&lt;/a&gt;  （提取码：e989）&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://yunpan.cn/cyTeZ7NMc6e6D" target="_blank"&gt;eBayTest视频2&lt;/a&gt;  （提取码：495a）&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://yunpan.cn/cyTeQ9GtDmngD" target="_blank"&gt;eBayTest视频3&lt;/a&gt;  （提取码：8a3a）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTeHy7axqWac" target="_blank"&gt;eBayTest视频4&lt;/a&gt;   （提取码：d385）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTWe7iiCS39n" target="_blank"&gt;Web UI Automation in CI 1&lt;/a&gt;   （提取码：442f）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTenZTwWaTMM" target="_blank"&gt;Web UI Automation in CI 2&lt;/a&gt;   （提取码：89eb）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTeGsuHq4hHM" target="_blank"&gt;Web UI Automation in CI 3&lt;/a&gt;   （提取码：34cc）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTe9y76DXh2p" target="_blank"&gt;Web UI Automation in CI 4&lt;/a&gt;    （提取码：9eea）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTeNruJ2wLLG" target="_blank"&gt;Web UI Automation in CI 5&lt;/a&gt;     （提取码：cbe3）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTeTUSejPFM2" target="_blank"&gt;Web UI Automation in CI 6&lt;/a&gt;     （提取码：b1e8）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCdditJ2zaIg" target="_blank"&gt;Appium 1&lt;/a&gt;      （提取码：0d8a）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCuwnVrKqX6p" target="_blank"&gt;Appium 2&lt;/a&gt;       （提取码：4452）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyTv5WfJsrxUT" target="_blank"&gt;Appium 3&lt;/a&gt;       （提取码：0c0b）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCuHjTZy3iSH" target="_blank"&gt;Appium 4&lt;/a&gt;       （提取码：a7c7）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCuS45Edu6Nq" target="_blank"&gt;Gradle 1&lt;/a&gt;      （提取码：69f9）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCukE9KE88Rk" target="_blank"&gt;Gradle 2&lt;/a&gt;        （提取码：39f0）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCdKsmV6yBPB" target="_blank"&gt;Gradle 3&lt;/a&gt;        （提取码：96b8）&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://yunpan.cn/cyCuEvpqD4gJE" target="_blank"&gt;Gradle 4&lt;/a&gt;        （提取码：938f）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面交给&lt;a href="/monkey" class="at_user" title="@monkey"&gt;&lt;i&gt;@&lt;/i&gt;monkey&lt;/a&gt;了&lt;/p&gt;</description>
      <author>lihuazhang</author>
      <pubDate>Mon, 19 Jan 2015 11:51:22 +0800</pubDate>
      <link>http://testerhome.com/topics/1897</link>
      <guid>http://testerhome.com/topics/1897</guid>
    </item>
    <item>
      <title>你应该学会使用的 5 个 ruby 方法</title>
      <description>&lt;p&gt;今天看到了这篇文章--&lt;a href="https://blog.engineyard.com/2015/five-ruby-methods-you-should-be-using" target="_blank"&gt;Five Ruby Methods You Should Be Using&lt;/a&gt;,感觉收获颇丰，先简单翻译一下先。&lt;/p&gt;

&lt;p&gt;作者写这篇文章的契机是在&lt;a href="http://exercism.io/" target="_blank"&gt;Exercism&lt;/a&gt;上看到了很多ruby代码可以用更好的方式去重构，因此他分享了一些冷门的但是非常有用的ruby方法。&lt;/p&gt;
&lt;h4&gt;Object#tap&lt;/h4&gt;
&lt;p&gt;你是否曾发现在某个对象上调用方法时返回值不是你所预期？你想返回这个对象，但是返回的时候又想对这个对象进行一些修改。比方说，你想给hash对象增加1个key value，这时候你需要调用Hash.[]方法，但是你想返回的是整个hash对象，而不是具体的某个value值，因此你需要显示的返回该对象。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_params&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:foo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;
  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;最后一行的那个params显得有些多余了。&lt;/p&gt;

&lt;p&gt;我们可以用&lt;code&gt;Object#tap&lt;/code&gt;方法来优化这个方案。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ruby-doc.org/core-2.1.5/Object.html#method-i-tap" target="_blank"&gt;tap&lt;/a&gt;方法用起来非常简单,直接在某个对象上调用tap方法，然后就可以在代码块里yielded这个对象，最后这个对象本身会被返回。下面的代码演示了如何使用tap方法来重构刚才的实现。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_params&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;tap&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:foo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;有很多地方都可以使用到&lt;code&gt;Object#tap&lt;/code&gt;方法，一般的规律是对那些在对象上调用，希望返回对象，但是却没返回该对象本身的方法都适用。&lt;/p&gt;
&lt;h4&gt;Array#bsearch&lt;/h4&gt;
&lt;p&gt;我不清楚你的情况，但我经常在数组里去查找数据。ruby的enumerable模块提供了很多简单好用的方法&lt;code&gt;select, reject, find&lt;/code&gt;。不过当数据源很庞大的时候，我开始对这些查找的性能表示忧桑。&lt;/p&gt;

&lt;p&gt;如果你正在使用ActiveRecord和非NO SQL的数据库，查询的算法复杂度是经过优化了的。但是有时候你需要从数据库里把所有的数据拉出来进行处理，比方说如果你加密了数据库，那就不能好好的写sql做查询了。&lt;/p&gt;

&lt;p&gt;这时候我会冥思苦想以找到一个最小的算法复杂度来筛选数据。如果你不了解算法复杂度，也就是这个O，请阅读&lt;a href="https://justin.abrah.ms/computer-science/big-o-notation-explained.html" target="_blank"&gt; Big-O Notation Explained By A Self-Taught Programmer&lt;/a&gt;或［Big-O Complexity Cheat Sheet](&lt;a href="http://bigocheatsheet.com/" rel="nofollow" target="_blank"&gt;http://bigocheatsheet.com/&lt;/a&gt;)。&lt;/p&gt;

&lt;p&gt;一般来说，算法复杂度越低，程序运行的速度就越快。&lt;code&gt;O(1), O(log n), O(n), O(n log(n)), O(n^2), O(2^n), O(n!)&lt;/code&gt;，在这个例子里，越往右算法复杂度是越高的。所以我们要让我们的算法接近左边的复杂度。&lt;/p&gt;

&lt;p&gt;当我们搜索数组的时候，一般第一个想到的方法便是&lt;code&gt;Enumerable#find&lt;/code&gt;,也就是select方法。不过这个方法会搜索整个数组直到找到预期的结果。如果要找的元素在数组的开始部分，那么搜索的效率倒不会太低，但如果是在数据的末尾，那么搜索时间将是很可观的。find方法的算法复杂度是O(n)。&lt;/p&gt;

&lt;p&gt;更好的办法是使用(Array#bsearch)[&lt;a href="http://www.ruby-doc.org/core-2.1.5/Array.html#method-i-bsearchO(log" rel="nofollow" target="_blank"&gt;http://www.ruby-doc.org/core-2.1.5/Array.html#method-i-bsearchO(log&lt;/a&gt;]方法。该方法的算法复杂度是 n)。你可以查看&lt;a href="http://fluxusfrequency.github.io/blog/2014/01/31/building-a-binary-search/" target="_blank"&gt;Building A Binary Search&lt;/a&gt;这篇文章来该算法的原理。&lt;/p&gt;

&lt;p&gt;下面的代码显示了搜索50000000个数字时不同算法之间的性能差异。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;require 'benchmark'

data = (0..50_000_000)

Benchmark.bm do |x|
  x.report(:find) { data.find {|number| number &amp;gt; 40_000_000 } }
  x.report(:bsearch) { data.bsearch {|number| number &amp;gt; 40_000_000 } }
end

         user       system     total       real
find     3.020000   0.010000   3.030000   (3.028417)
bsearch  0.000000   0.000000   0.000000   (0.000006)
&lt;/pre&gt;

&lt;p&gt;如你所见，&lt;code&gt;bsearch&lt;/code&gt;要快的多。不过要注意的是bsearch要求搜索的数组是排序过的。尽管这个限制bsearch的使用场景，bsearch在显示生活中确实是有用武之地的。比如通过&lt;code&gt;created_at&lt;/code&gt;字段来查找从数据库中取出的数据。&lt;/p&gt;
&lt;h4&gt;Enumerable#flat_map&lt;/h4&gt;
&lt;p&gt;考虑这种情况，你有个blog应用，你希望找到上个月有过评论的所有作者，你可以会这样做：&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;CommentFinder&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_for_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;username&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;得到的结果看起来会是这样的&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="o"&gt;[[[&lt;/span&gt;&lt;span class="s1"&gt;'Ben'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Sam'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'David'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Keith'&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="s1"&gt;'Chris'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;[]]]&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;不过你想得到的是所有作者，这时候你大概会使用&lt;code&gt;flatten&lt;/code&gt;方法。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;CommentFinder&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_for_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;username&lt;/span&gt;
      &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;flatten&lt;/span&gt;
    &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;flatten&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;另一个选择是使用&lt;code&gt;flat_map&lt;/code&gt;方法。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;CommentFinder&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_for_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;flat_map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;flat_map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;username&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;这跟使用flatten方法没什么太大的不同，不过看起来会优雅一点，毕竟不需要反复调用flatten了。&lt;/p&gt;
&lt;h4&gt;Array.new with a Block&lt;/h4&gt;
&lt;p&gt;想当年我在一个技术训练营，我们的导师Jeff Casimir同志(&lt;a href="http://turing.io/" target="_blank"&gt;Turing School&lt;/a&gt;的创始人)让我们在一小时内写个Battleship游戏。这是极好的进行面向对象编程的练习，我们需要Rules，Players, Games和Boards类。&lt;/p&gt;

&lt;p&gt;创建代表Board的数据结构是一件非常有意思的事情。经过几次迭代我发现下面的方法是初始化8x8格子的最好方式：&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Board&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;board&lt;/span&gt;
    &lt;span class="vi"&gt;@board&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'0'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;上面的代码是什么意思？当我们调用&lt;code&gt;Array.new&lt;/code&gt;并传入了参数length，1个长度为length的数组将会被创建。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#=&amp;gt; [nil, nil, nil, nil, nil, nil, nil, nil]&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;当你传入一个block，这时候block的返回值会被当成是数组的每个元素。&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'O'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;#=&amp;gt; ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;因此，当你向block传入1个具有8个元素的数组时，你会得到8x8个元素的嵌套数组了。&lt;/p&gt;

&lt;p&gt;用Array#new加block的方式可以创建很多有趣和任意嵌套层级的数组。&lt;/p&gt;
&lt;h4&gt;&amp;lt;=&amp;gt;&lt;/h4&gt;
&lt;p&gt;这个方法就很常见了。简单来说这方法是判断左值和右值的关系的。如果左值大于右值返回1，相等返回0，否则返回－1。&lt;/p&gt;

&lt;p&gt;实际上&lt;code&gt;Enumerable#sort, Enumerable#max&lt;/code&gt;方法都是基于&amp;lt;=&amp;gt;的。另外如果你定义了&amp;lt;=&amp;gt;，然后再include Comparable，你将免费得到&amp;lt;=, &amp;lt;, &amp;gt;=, &amp;gt;以及between方法。&lt;/p&gt;

&lt;p&gt;这是作者的在现实生活中所用到的例子：&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fix_minutes&lt;/span&gt;
  &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;member?&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;
    &lt;span class="vi"&gt;@hours&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;
    &lt;span class="vi"&gt;@minutes&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="vi"&gt;@hours&lt;/span&gt; &lt;span class="sx"&gt;%= 24
  self
end

&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;这个方法不是很好理解，大概的意思就是如果minutes超过60的话，小时数+1,等于60小时数不变，否则－1。&lt;/p&gt;
&lt;h4&gt;讨论&lt;/h4&gt;
&lt;p&gt;会的方法越多写出来的代码可能会更有表现力，边写代码边改进,另外多读rubydoc。&lt;/p&gt;</description>
      <author>easonhan007</author>
      <pubDate>Mon, 19 Jan 2015 10:40:32 +0800</pubDate>
      <link>http://testerhome.com/topics/1896</link>
      <guid>http://testerhome.com/topics/1896</guid>
    </item>
    <item>
      <title>UiScrollable 如何做到让它一个 item 接着一个 item 滚动？</title>
      <description>&lt;p&gt;就是接连的item,每次滚动一个item，并停下来，然后接着又滚动到下一个item？&lt;br&gt;
自已调了好久，还是没能实现这种效果。&lt;br&gt;
话说步长到底是怎么理解啊。哪个方法可以设置它滚动的距离，整数值滚动较远,0又不滚动，1又滚动蛮远。能滚动小点么？&lt;/p&gt;</description>
      <author>nick_tao</author>
      <pubDate>Sun, 18 Jan 2015 18:11:18 +0800</pubDate>
      <link>http://testerhome.com/topics/1895</link>
      <guid>http://testerhome.com/topics/1895</guid>
    </item>
  </channel>
</rss>
